{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-types.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-utils.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-constants.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-tokens.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-components-input-card.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-pipes-amount.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-pipes-currency.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-pipes-decimal.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-pipes-format-card.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-components-input-card-group.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-components-input-cvc.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-components-input-expire.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-components-thumbnail-card.mjs", "../../../../../../node_modules/@taiga-ui/addon-commerce/fesm2022/taiga-ui-addon-commerce-validators.mjs"],
  "sourcesContent": ["// cspell:disable\n/**\n * **Active ISO 4217 alphabetic currency codes**\n *\n * @description The ISO 4217 classification is used to describe alphabetic and numeric currency codes.\n * @description Alphabetic code is also called \"alfa-3\".\n *\n * @link https://en.wikipedia.org/wiki/ISO_4217\n */\n// eslint-disable-next-line no-restricted-syntax\nvar TuiCurrency;\n(function (TuiCurrency) {\n  /**\n   * Armenian dram\n   *\n   * @description Numeric code: 051\n   * @description Alphabetic code: AMD\n   * @description Countries and territories: Armenia\n   * @description Currency symbol: ֏\n   */\n  TuiCurrency[\"ArmenianDram\"] = \"AMD\";\n  /**\n   * Australian dollar\n   *\n   * @description Numeric code: 036\n   * @description Alphabetic code: AUD\n   * @description Countries and territories: Australia, Christmas Island (CX), Cocos (Keeling) Islands (CC), Heard Island and McDonald Islands (HM), Kiribati (KI), Nauru (NR), Norfolk Island (NF), Tuvalu (TV)\n   * @description Currency symbol: A$\n   */\n  TuiCurrency[\"AustralianDollar\"] = \"AUD\";\n  TuiCurrency[\"AzerbaijaniManat\"] = \"AZN\";\n  /**\n   * Thai baht\n   *\n   * @description Numeric code: 764\n   * @description Alphabetic code: THB\n   * @description Countries and territories: Thailand\n   * @description Currency symbol: ฿\n   */\n  TuiCurrency[\"Baht\"] = \"THB\";\n  /**\n   * \tBahraini Dinar\n   *\n   * @description Numeric code: 048\n   * @description Alphabetic code: BHD\n   * @description Countries and territories: Bahrain\n   * @description Currency symbol: BD\n   */\n  TuiCurrency[\"BahrainiDinar\"] = \"BHD\";\n  /**\n   * Belarusian ruble\n   *\n   * @description Numeric code: 933\n   * @description Alphabetic code: BYN\n   * @description Countries and territories: Belarus\n   * @description Currency symbol: Br\n   */\n  TuiCurrency[\"BelarusianRuble\"] = \"BYN\";\n  /**\n   * Brazilian Real\n   *\n   * @description Numeric code: 986\n   * @description Alphabetic code: BRL\n   * @description Countries and territories: Brazilia\n   * @description Currency symbol: R$\n   */\n  TuiCurrency[\"BrazilianReal\"] = \"BRL\";\n  /**\n   * Canadian dollar\n   *\n   * @description Numeric code: 124\n   * @description Alphabetic code: CAD\n   * @description Countries and territories: Canada\n   * @description Currency symbol: C$\n   */\n  TuiCurrency[\"CanadianDollar\"] = \"CAD\";\n  /**\n   * Czech Koruna\n   *\n   * @description Numeric code: 203\n   * @description Alphabetic code: СZK\n   * @description Countries and territories: Czech Republic\n   * @description Currency symbol: Kč\n   */\n  TuiCurrency[\"CzechKoruna\"] = \"CZK\";\n  /**\n   * United Arab Emirates dirham\n   *\n   * @description Numeric code: 784\n   * @description Alphabetic code: AED\n   * @description Countries and territories: United Arab Emirates\n   * @description Currency symbol: Dh\n   */\n  TuiCurrency[\"Dirham\"] = \"AED\";\n  /**\n   * United States dollar\n   *\n   * @description Numeric code: 840\n   * @description Alphabetic code: USD\n   * @description Countries and territories: United States, American Samoa (AS), British Indian Ocean Territory (IO) (also uses GBP), British Virgin Islands (VG), Caribbean Netherlands (BQ – Bonaire, Sint Eustatius and Saba), Ecuador (EC), El Salvador (SV), Guam (GU), Marshall Islands (MH), Federated States of Micronesia (FM), Northern Mariana Islands (MP), Palau (PW), Panama (PA) (as well as Panamanian Balboa), Puerto Rico (PR), Timor-Leste (TL), Turks and Caicos Islands (TC), U.S. Virgin Islands (VI), United States Minor Outlying Islands (UM)\n   * @description Currency symbol: $\n   */\n  TuiCurrency[\"Dollar\"] = \"USD\";\n  /**\n   * East Caribbean Dollar\n   *\n   * @description Numeric code: 951\n   * @description Alphabetic code: XCD\n   * @description Countries and territories: Anguilla, Antigua and Barbuda, Dominica, Grenada, Montserrat, Saint Kitts and Nevis, Saint Lucia, Saint Vincent and the Grenadines\n   * @description Currency symbol: EC$\n   */\n  TuiCurrency[\"EastCaribbeanDollar\"] = \"XCD\";\n  /**\n   * Euro\n   *\n   * @description Numeric code: 978\n   * @description Alphabetic code: EUR\n   * @description Countries and territories: Åland Islands (AX), European Union (EU), Andorra (AD), Austria (AT), Belgium (BE), Cyprus (CY), Estonia (EE), Finland (FI), France (FR), French Southern and Antarctic Lands (TF), Germany (DE), Greece (GR), Guadeloupe (GP), Ireland (IE), Italy (IT), Latvia (LV), Lithuania (LT), Luxembourg (LU), Malta (MT), French Guiana (GF), Martinique (MQ), Mayotte (YT), Monaco (MC), Montenegro (ME), Netherlands (NL), Portugal (PT), Réunion (RE), Saint Barthélemy (BL), Saint Martin (MF), Saint Pierre and Miquelon (PM), San Marino (SM), Slovakia (SK), Slovenia (SI), Spain (ES), Vatican City (VA)\n   * @description Currency symbol: €\n   */\n  TuiCurrency[\"Euro\"] = \"EUR\";\n  /**\n   * Forint\n   *\n   * @description Numeric code: 348\n   * @description Alphabetic code: HUF\n   * @description Countries and territories: Hungray\n   * @description Currency symbol: Ft\n   */\n  TuiCurrency[\"Forint\"] = \"HUF\";\n  TuiCurrency[\"GeorgianLari\"] = \"GEL\";\n  /**\n   * Hong Kong dollar\n   *\n   * @description Numeric code: 344\n   * @description Alphabetic code: HKD\n   * @description Countries and territories: Hong Kong\n   * @description Currency symbol: HK$\n   */\n  TuiCurrency[\"HongKongDollar\"] = \"HKD\";\n  /**\n   * Ukrainian hryvnia\n   *\n   * @description Numeric code: 980\n   * @description Alphabetic code: UAH\n   * @description Countries and territories: Ukraine\n   * @description Currency symbol: ₴\n   */\n  TuiCurrency[\"Hryvnia\"] = \"UAH\";\n  /**\n   * Indian rupee\n   *\n   * @description Numeric code: 356\n   * @description Alphabetic code: INR\n   * @description Countries and territories: India, Bhutan\n   * @description Currency symbol: ₹\n   */\n  TuiCurrency[\"IndianRupee\"] = \"INR\";\n  TuiCurrency[\"IndonesianRupiah\"] = \"IDR\";\n  TuiCurrency[\"IranianRial\"] = \"IRR\";\n  /**\n   * Israeli new shekel\n   *\n   * @description Numeric code: 376\n   * @description Alphabetic code: ILS\n   * @description Countries and territories: Israel\n   * @description Currency symbol: ₪\n   */\n  TuiCurrency[\"IsraeliShekel\"] = \"ILS\";\n  /**\n   * Kyrgyzstani som\n   *\n   * @description Numeric code: 417\n   * @description Alphabetic code: KGS\n   * @description Countries and territories: Kyrgyzstan\n   * @description Currency symbol: c\n   */\n  TuiCurrency[\"KyrgyzstanSom\"] = \"KGS\";\n  TuiCurrency[\"MalaysianRinggit\"] = \"MYR\";\n  /**\n   * Mexican peso\n   *\n   * @description Numeric code: 484\n   * @description Alphabetic code: MXN\n   * @description Countries and territories: Mexico\n   * @description Currency symbol: $\n   */\n  TuiCurrency[\"MexicanPeso\"] = \"MXN\";\n  /**\n   * Moldovan Leu\n   *\n   * @description Numeric code: 498\n   * @description Alphabetic code: MDL\n   * @description Countries and territories: Moldova\n   * @description Currency symbol: L\n   */\n  TuiCurrency[\"MoldovanLeu\"] = \"MDL\";\n  TuiCurrency[\"MongolianTugrik\"] = \"MNT\";\n  TuiCurrency[\"NewTurkmenManat\"] = \"TMT\";\n  /**\n   * Poland Zloty\n   *\n   * @description Numeric code: 985\n   * @description Alphabetic code: PLN\n   * @description Countries and territories: Poland\n   * @description Currency symbol: zł\n   */\n  TuiCurrency[\"PolandZloty\"] = \"PLN\";\n  /**\n   * Pound sterling\n   *\n   * @description Numeric code: 826\n   * @description Alphabetic code: GBP\n   * @description Countries and territories: United Kingdom, Isle of Man (IM, see Manx pound), Jersey (JE, see Jersey pound), Guernsey (GG, see Guernsey pound), Tristan da Cunha (SH-TA)\n   * @description Currency symbol: £\n   */\n  TuiCurrency[\"Pound\"] = \"GBP\";\n  /**\n   * Russian ruble\n   *\n   * @description Numeric code: 643\n   * @description Alphabetic code: RUB\n   * @description Countries and territories: Russia\n   * @description Currency symbol: ₽\n   */\n  TuiCurrency[\"Ruble\"] = \"RUB\";\n  /**\n   * Malaysian ringgit\n   *\n   * @description Numeric code: 458\n   * @description Alphabetic code: MYR\n   * @description Countries and territories: Malaysia\n   * @description Currency symbol: RM\n   */\n  TuiCurrency[\"SaudiRiyal\"] = \"SAR\";\n  /**\n   *\n   * Belarusian ruble\n   *\n   * @description Numeric code: 933\n   * @description Alphabetic code: BYN\n   * @description Countries and territories: Belarus\n   * @description Currency symbol: Rbl\n   */\n  TuiCurrency[\"SerbianDinar\"] = \"RSD\";\n  /**\n   * Georgian lari\n   *\n   * @description Numeric code: 981\n   * @description Alphabetic code: GEL\n   * @description Countries and territories: Georgia\n   * @description Currency symbol: ₾\n   */\n  /**\n   * Singapore dollar\n   *\n   * @description Numeric code: 702\n   * @description Alphabetic code: SGD\n   * @description Countries and territories: Singapore\n   * @description Currency symbol: S$\n   */\n  TuiCurrency[\"SingaporeDollar\"] = \"SGD\";\n  /**\n   * Azerbaijani manat\n   *\n   * @description Numeric code: 944\n   * @description Alphabetic code: AZN\n   * @description Countries and territories: Azerbaijan\n   * @description Currency symbol: ₼\n   */\n  TuiCurrency[\"SouthAfricanRand\"] = \"ZAR\";\n  /**\n   * Sri Lankan rupee\n   *\n   * @description Numeric code: 144\n   * @description Alphabetic code: LKR\n   * @description Countries and territories: Sri Lanka\n   * @description Currency symbol: Rs.\n   */\n  TuiCurrency[\"SriLankanRupee\"] = \"LKR\";\n  /**\n   * Serbian dinar\n   *\n   * @description Numeric code: 941\n   * @description Alphabetic code: RSD\n   * @description Countries and territories: Serbia\n   * @description Currency symbol: DIN\n   */\n  /**\n   * Swiss franc\n   *\n   * @description Numeric code: 756\n   * @description Alphabetic code: CHF\n   * @description Countries and territories: Switzerland, Liechtenstein (LI)\n   * @description Currency symbol: ₣\n   */\n  TuiCurrency[\"SwissFranc\"] = \"CHF\";\n  /**\n   * Saudi Riyal\n   *\n   * @description Numeric code: 682\n   * @description Alphabetic code: SAR\n   * @description Countries and territories: Saudi Arabia\n   * @description Currency symbol: SR\n   */\n  /**\n   * Tajikistani somoni\n   *\n   * @description Numeric code: 972\n   * @description Alphabetic code: TJS\n   * @description Countries and territories: Tajikistan\n   * @description Currency symbol: SM\n   */\n  TuiCurrency[\"TajikistaniSomoni\"] = \"TJS\";\n  /**\n   * Mongolian tugrik\n   *\n   * @description Numeric code: 496\n   * @description Alphabetic code: MNT\n   * @description Countries and territories: Mongolia\n   * @description Currency symbol: ₮\n   */\n  /**\n   * Kazakhstani tenge\n   *\n   * @description Numeric code: 398\n   * @description Alphabetic code: KZT\n   * @description Countries and territories: Kazakhstan\n   * @description Currency symbol: ₸\n   */\n  TuiCurrency[\"Tenge\"] = \"KZT\";\n  /**\n   * South African rand\n   *\n   * @description Numeric code: 710\n   * @description Alphabetic code: ZAR\n   * @description Countries and territories: South Africa\n   * @description Currency symbol: R\n   */\n  /**\n   * Turkish lira\n   *\n   * @description Numeric code: 949\n   * @description Alphabetic code: TRY\n   * @description Countries and territories: Turkey\n   * @description Currency symbol: ₺\n   */\n  TuiCurrency[\"TurkishLira\"] = \"TRY\";\n  /**\n   * Iranian rial\n   *\n   * @description Numeric code: 364\n   * @description Alphabetic code: IRR\n   * @description Countries and territories: Iran\n   * @description Currency symbol: IR\n   */\n  /**\n   * Uzbek sum\n   *\n   * @description Numeric code: 860\n   * @description Alphabetic code: UZS\n   * @description Countries and territories: Uzbekistan\n   * @description Currency symbol: So'm\n   */\n  TuiCurrency[\"UzbekSum\"] = \"UZS\";\n  /**\n   * Indonesian rupiah\n   *\n   * @description Numeric code: 360\n   * @description Alphabetic code: IDR\n   * @description Countries and territories: Indonesia\n   * @description Currency symbol: Rp\n   */\n  TuiCurrency[\"VietnameseDong\"] = \"VND\";\n  /**\n   * Vietnamese dong\n   *\n   * @description Numeric code: 704\n   * @description Alphabetic code: VND\n   * @description Countries and territories: Vietnam\n   * @description Currency symbol: đ\n   */\n  /**\n   * South Korean won\n   *\n   * @description Numeric code: 410\n   * @description Alphabetic code: KRW\n   * @description Countries and territories: South Korea\n   * @description Currency symbol: ₩\n   */\n  TuiCurrency[\"Won\"] = \"KRW\";\n  /**\n   * New Turkmen manat\n   *\n   * @description Numeric code: 934\n   * @description Alphabetic code: TMT\n   * @description Countries and territories: Turkmenistan\n   * @description Currency symbol: TMT\n   */\n  /**\n   * Japanese yen\n   *\n   * @description Numeric code: 392\n   * @description Alphabetic code: JPY\n   * @description Countries and territories: Japan\n   * @description Currency symbol: ¥\n   */\n  TuiCurrency[\"Yen\"] = \"JPY\";\n  /**\n   * Chinese yuan\n   *\n   * @description Numeric code: 156\n   * @description Alphabetic code: CNY\n   * @description Countries and territories: China\n   * @description Currency symbol: CN¥\n   */\n  TuiCurrency[\"YuanRenminbi\"] = \"CNY\";\n})(TuiCurrency || (TuiCurrency = {}));\n\n// cspell:disable\n/**\n * **Active ISO 4217 numeric currency codes**\n *\n * @description The ISO 4217 classification is used to describe alphabetic and numeric currency codes.\n * @description Numeric code is also called \"number-3\".\n *\n * @link https://en.wikipedia.org/wiki/ISO_4217\n */\n// eslint-disable-next-line no-restricted-syntax\nvar TuiCurrencyCode;\n(function (TuiCurrencyCode) {\n  /**\n   * Armenian dram\n   *\n   * @description Numeric code: 051\n   * @description Alphabetic code: AMD\n   * @description Countries and territories: Armenia\n   * @description Currency symbol: ֏\n   */\n  TuiCurrencyCode[\"ArmenianDram\"] = \"051\";\n  /**\n   * Australian dollar\n   *\n   * @description Numeric code: 036\n   * @description Alphabetic code: AUD\n   * @description Countries and territories: Australia, Christmas Island (CX), Cocos (Keeling) Islands (CC), Heard Island and McDonald Islands (HM), Kiribati (KI), Nauru (NR), Norfolk Island (NF), Tuvalu (TV)\n   * @description Currency symbol: A$\n   */\n  TuiCurrencyCode[\"AustralianDollar\"] = \"036\";\n  /**\n   * Azerbaijani manat\n   *\n   * @description Numeric code: 944\n   * @description Alphabetic code: AZN\n   * @description Countries and territories: Azerbaijan\n   * @description Currency symbol: ₼\n   */\n  TuiCurrencyCode[\"AzerbaijaniManat\"] = \"944\";\n  /**\n   * Thai baht\n   *\n   * @description Numeric code: 764\n   * @description Alphabetic code: THB\n   * @description Countries and territories: Thailand\n   * @description Currency symbol: ฿\n   */\n  TuiCurrencyCode[\"Baht\"] = \"764\";\n  /**\n   * \tBahraini Dinar\n   *\n   * @description Numeric code: 048\n   * @description Alphabetic code: BHD\n   * @description Countries and territories: Bahrain\n   * @description Currency symbol: BD\n   */\n  TuiCurrencyCode[\"BahrainiDinar\"] = \"048\";\n  /**\n   * Belarusian ruble\n   *\n   * @description Numeric code: 933\n   * @description Alphabetic code: BYN\n   * @description Countries and territories: Belarus\n   * @description Currency symbol: Br\n   */\n  TuiCurrencyCode[\"BelarusianRuble\"] = \"933\";\n  /**\n   * Brazilian Real\n   *\n   * @description Numeric code: 986\n   * @description Alphabetic code: BRL\n   * @description Countries and territories: Brazilia\n   * @description Currency symbol: R$\n   */\n  TuiCurrencyCode[\"BrazilianReal\"] = \"986\";\n  /**\n   * Canadian dollar\n   *\n   * @description Numeric code: 124\n   * @description Alphabetic code: CAD\n   * @description Countries and territories: Canada\n   * @description Currency symbol: C$\n   */\n  TuiCurrencyCode[\"CanadianDollar\"] = \"124\";\n  /**\n   * Czech Koruna\n   *\n   * @description Numeric code: 203\n   * @description Alphabetic code: CZK\n   * @description Countries and territories: Czech Republic\n   * @description Currency symbol: Kč\n   */\n  TuiCurrencyCode[\"CzechKoruna\"] = \"203\";\n  /**\n   * United Arab Emirates dirham\n   *\n   * @description Numeric code: 784\n   * @description Alphabetic code: AED\n   * @description Countries and territories: United Arab Emirates\n   * @description Currency symbol: Dh\n   */\n  TuiCurrencyCode[\"Dirham\"] = \"784\";\n  /**\n   * United States dollar\n   *\n   * @description Numeric code: 840\n   * @description Alphabetic code: USD\n   * @description Countries and territories: United States, American Samoa (AS), British Indian Ocean Territory (IO) (also uses GBP), British Virgin Islands (VG), Caribbean Netherlands (BQ – Bonaire, Sint Eustatius and Saba), Ecuador (EC), El Salvador (SV), Guam (GU), Marshall Islands (MH), Federated States of Micronesia (FM), Northern Mariana Islands (MP), Palau (PW), Panama (PA) (as well as Panamanian Balboa), Puerto Rico (PR), Timor-Leste (TL), Turks and Caicos Islands (TC), U.S. Virgin Islands (VI), United States Minor Outlying Islands (UM)\n   * @description Currency symbol: $\n   */\n  TuiCurrencyCode[\"Dollar\"] = \"840\";\n  /**\n   * East Caribbean Dollar\n   *\n   * @description Numeric code: 951\n   * @description Alphabetic code: XCD\n   * @description Countries and territories: Anguilla, Antigua and Barbuda, Dominica, Grenada, Montserrat, Saint Kitts and Nevis, Saint Lucia, Saint Vincent and the Grenadines\n   * @description Currency symbol: EC$\n   */\n  TuiCurrencyCode[\"EastCaribbeanDollar\"] = \"951\";\n  /**\n   * Euro\n   *\n   * @description Numeric code: 978\n   * @description Alphabetic code: EUR\n   * @description Countries and territories: Åland Islands (AX), European Union (EU), Andorra (AD), Austria (AT), Belgium (BE), Cyprus (CY), Estonia (EE), Finland (FI), France (FR), French Southern and Antarctic Lands (TF), Germany (DE), Greece (GR), Guadeloupe (GP), Ireland (IE), Italy (IT), Latvia (LV), Lithuania (LT), Luxembourg (LU), Malta (MT), French Guiana (GF), Martinique (MQ), Mayotte (YT), Monaco (MC), Montenegro (ME), Netherlands (NL), Portugal (PT), Réunion (RE), Saint Barthélemy (BL), Saint Martin (MF), Saint Pierre and Miquelon (PM), San Marino (SM), Slovakia (SK), Slovenia (SI), Spain (ES), Vatican City (VA)\n   * @description Currency symbol: €\n   */\n  TuiCurrencyCode[\"Euro\"] = \"978\";\n  /**\n   * Forint\n   *\n   * @description Numeric code: 348\n   * @description Alphabetic code: HUF\n   * @description Countries and territories: Hungray\n   * @description Currency symbol: Ft\n   */\n  TuiCurrencyCode[\"Forint\"] = \"348\";\n  /**\n   * Georgian lari\n   *\n   * @description Numeric code: 981\n   * @description Alphabetic code: GEL\n   * @description Countries and territories: Georgia\n   * @description Currency symbol: ₾\n   */\n  TuiCurrencyCode[\"GeorgianLari\"] = \"981\";\n  /**\n   * Hong Kong dollar\n   *\n   * @description Numeric code: 344\n   * @description Alphabetic code: HKD\n   * @description Countries and territories: Hong Kong\n   * @description Currency symbol: HK$\n   */\n  TuiCurrencyCode[\"HongKongDollar\"] = \"344\";\n  /**\n   * Ukrainian hryvnia\n   *\n   * @description Numeric code: 980\n   * @description Alphabetic code: UAH\n   * @description Countries and territories: Ukraine\n   * @description Currency symbol: ₴\n   */\n  TuiCurrencyCode[\"Hryvnia\"] = \"980\";\n  /**\n   * Indian rupee\n   *\n   * @description Numeric code: 356\n   * @description Alphabetic code: INR\n   * @description Countries and territories: India, Bhutan\n   * @description Currency symbol: ₹\n   */\n  TuiCurrencyCode[\"IndianRupee\"] = \"356\";\n  /**\n   * Indonesian rupiah\n   *\n   * @description Numeric code: 360\n   * @description Alphabetic code: IDR\n   * @description Countries and territories: Indonesia\n   * @description Currency symbol: Rp\n   */\n  TuiCurrencyCode[\"IndonesianRupiah\"] = \"360\";\n  /**\n   * Iranian rial\n   *\n   * @description Numeric code: 364\n   * @description Alphabetic code: IRR\n   * @description Countries and territories: Iran\n   * @description Currency symbol: IR\n   */\n  TuiCurrencyCode[\"IranianRial\"] = \"364\";\n  /**\n   * Israeli new shekel\n   *\n   * @description Numeric code: 376\n   * @description Alphabetic code: ILS\n   * @description Countries and territories: Israel\n   * @description Currency symbol: ₪\n   */\n  TuiCurrencyCode[\"IsraeliShekel\"] = \"376\";\n  /**\n   * Kyrgyzstani som\n   *\n   * @description Numeric code: 417\n   * @description Alphabetic code: KGS\n   * @description Countries and territories: Kyrgyzstan\n   * @description Currency symbol: c\n   */\n  TuiCurrencyCode[\"KyrgyzstanSom\"] = \"417\";\n  /**\n   * Malaysian ringgit\n   *\n   * @description Numeric code: 458\n   * @description Alphabetic code: MYR\n   * @description Countries and territories: Malaysia\n   * @description Currency symbol: RM\n   */\n  TuiCurrencyCode[\"MalaysianRinggit\"] = \"458\";\n  /**\n   * Mexican peso\n   *\n   * @description Numeric code: 484\n   * @description Alphabetic code: MXN\n   * @description Countries and territories: Mexico\n   * @description Currency symbol: $\n   */\n  TuiCurrencyCode[\"MexicanPeso\"] = \"484\";\n  /**\n   * Moldovan Leu\n   *\n   * @description Numeric code: 498\n   * @description Alphabetic code: MDL\n   * @description Countries and territories: Moldova\n   * @description Currency symbol: L\n   */\n  TuiCurrencyCode[\"MoldovanLeu\"] = \"498\";\n  /**\n   * Mongolian tugrik\n   *\n   * @description Numeric code: 496\n   * @description Alphabetic code: MNT\n   * @description Countries and territories: Mongolia\n   * @description Currency symbol: ₮\n   */\n  TuiCurrencyCode[\"MongolianTugrik\"] = \"496\";\n  /**\n   * New Turkmen manat\n   *\n   * @description Numeric code: 934\n   * @description Alphabetic code: TMT\n   * @description Countries and territories: Turkmenistan\n   * @description Currency symbol: TMT\n   */\n  TuiCurrencyCode[\"NewTurkmenManat\"] = \"934\";\n  /**\n   * Poland Zloty\n   *\n   * @description Numeric code: 985\n   * @description Alphabetic code: PLN\n   * @description Countries and territories: Poland\n   * @description Currency symbol: zł\n   */\n  TuiCurrencyCode[\"PolandZloty\"] = \"985\";\n  /**\n   * Pound sterling\n   *\n   * @description Numeric code: 826\n   * @description Alphabetic code: GBP\n   * @description Countries and territories: United Kingdom, Isle of Man (IM, see Manx pound), Jersey (JE, see Jersey pound), Guernsey (GG, see Guernsey pound), Tristan da Cunha (SH-TA)\n   * @description Currency symbol: £\n   */\n  TuiCurrencyCode[\"Pound\"] = \"826\";\n  /**\n   * Tajikistani somoni\n   *\n   * @description Numeric code: 972\n   * @description Alphabetic code: TJS\n   * @description Countries and territories: Tajikistan\n   * @description Currency symbol: SM\n   */\n  /**\n   * Russian ruble\n   *\n   * @description Numeric code: 643\n   * @description Alphabetic code: RUB\n   * @description Countries and territories: Russia\n   * @description Currency symbol: ₽\n   */\n  TuiCurrencyCode[\"Ruble\"] = \"643\";\n  /**\n   * Saudi Riyal\n   *\n   * @description Numeric code: 682\n   * @description Alphabetic code: SAR\n   * @description Countries and territories: Saudi Arabia\n   * @description Currency symbol: SR\n   */\n  TuiCurrencyCode[\"SaudiRiyal\"] = \"682\";\n  /**\n   * Serbian dinar\n   *\n   * @description Numeric code: 941\n   * @description Alphabetic code: RSD\n   * @description Countries and territories: Serbia\n   * @description Currency symbol: DIN\n   */\n  TuiCurrencyCode[\"SerbianDinar\"] = \"941\";\n  /**\n   * Singapore dollar\n   *\n   * @description Numeric code: 702\n   * @description Alphabetic code: SGD\n   * @description Countries and territories: Singapore\n   * @description Currency symbol: S$\n   */\n  TuiCurrencyCode[\"SingaporeDollar\"] = \"702\";\n  /**\n   * South African rand\n   *\n   * @description Numeric code: 710\n   * @description Alphabetic code: ZAR\n   * @description Countries and territories: South Africa\n   * @description Currency symbol: R\n   */\n  TuiCurrencyCode[\"SouthAfricanRand\"] = \"710\";\n  /**\n   * Sri Lankan rupee\n   *\n   * @description Numeric code: 144\n   * @description Alphabetic code: LKR\n   * @description Countries and territories: Sri Lanka\n   * @description Currency symbol: Rs.\n   */\n  TuiCurrencyCode[\"SriLankanRupee\"] = \"144\";\n  /**\n   * Swiss franc\n   *\n   * @description Numeric code: 756\n   * @description Alphabetic code: CHF\n   * @description Countries and territories: Switzerland, Liechtenstein (LI)\n   * @description Currency symbol: ₣\n   */\n  TuiCurrencyCode[\"SwissFranc\"] = \"756\";\n  TuiCurrencyCode[\"TajikistaniSomoni\"] = \"972\";\n  /**\n   * Kazakhstani tenge\n   *\n   * @description Numeric code: 398\n   * @description Alphabetic code: KZT\n   * @description Countries and territories: Kazakhstan\n   * @description Currency symbol: ₸\n   */\n  TuiCurrencyCode[\"Tenge\"] = \"398\";\n  /**\n   * Turkish lira\n   *\n   * @description Numeric code: 949\n   * @description Alphabetic code: TRY\n   * @description Countries and territories: Turkey\n   * @description Currency symbol: ₺\n   */\n  TuiCurrencyCode[\"TurkishLira\"] = \"949\";\n  /**\n   * Uzbek sum\n   *\n   * @description Numeric code: 860\n   * @description Alphabetic code: UZS\n   * @description Countries and territories: Uzbekistan\n   * @description Currency symbol: So'm\n   */\n  TuiCurrencyCode[\"UzbekSum\"] = \"860\";\n  /**\n   * Vietnamese dong\n   *\n   * @description Numeric code: 704\n   * @description Alphabetic code: VND\n   * @description Countries and territories: Vietnam\n   * @description Currency symbol: đ\n   */\n  TuiCurrencyCode[\"VietnameseDong\"] = \"704\";\n  /**\n   * South Korean won\n   *\n   * @description Numeric code: 410\n   * @description Alphabetic code: KRW\n   * @description Countries and territories: South Korea\n   * @description Currency symbol: ₩\n   */\n  TuiCurrencyCode[\"Won\"] = \"410\";\n  /**\n   * Japanese yen\n   *\n   * @description Numeric code: 392\n   * @description Alphabetic code: JPY\n   * @description Countries and territories: Japan\n   * @description Currency symbol: ¥\n   */\n  TuiCurrencyCode[\"Yen\"] = \"392\";\n  /**\n   * Chinese yuan\n   *\n   * @description Numeric code: 156\n   * @description Alphabetic code: CNY\n   * @description Countries and territories: China\n   * @description Currency symbol: CN¥\n   */\n  TuiCurrencyCode[\"YuanRenminbi\"] = \"156\";\n})(TuiCurrencyCode || (TuiCurrencyCode = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCurrency, TuiCurrencyCode };\n", "import { tuiIsString } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TuiCurrencyCode, TuiCurrency } from '@taiga-ui/addon-commerce/types';\nimport { TUI_NON_DIGITS_REGEXP } from '@taiga-ui/cdk/constants';\nimport { tuiClamp } from '@taiga-ui/cdk/utils/math';\nfunction tuiGetCurrencySymbol(currency) {\n  switch (currency) {\n    case TuiCurrency.ArmenianDram:\n    case TuiCurrencyCode.ArmenianDram:\n      return '֏';\n    case TuiCurrency.AustralianDollar:\n    case TuiCurrencyCode.AustralianDollar:\n      return 'A$';\n    case TuiCurrency.AzerbaijaniManat:\n    case TuiCurrencyCode.AzerbaijaniManat:\n      return '₼';\n    case TuiCurrency.BahrainiDinar:\n    case TuiCurrencyCode.BahrainiDinar:\n      return 'BD';\n    case TuiCurrency.Baht:\n    case TuiCurrencyCode.Baht:\n      return '฿';\n    case TuiCurrency.BelarusianRuble:\n    case TuiCurrencyCode.BelarusianRuble:\n      return 'Br';\n    case TuiCurrency.BrazilianReal:\n    case TuiCurrencyCode.BrazilianReal:\n      return 'R$';\n    case TuiCurrency.CanadianDollar:\n    case TuiCurrencyCode.CanadianDollar:\n      return 'C$';\n    case TuiCurrency.CzechKoruna:\n    case TuiCurrencyCode.CzechKoruna:\n      return 'Kč';\n    case TuiCurrency.Dirham:\n    case TuiCurrencyCode.Dirham:\n      return 'Dh';\n    case TuiCurrency.Dollar:\n    case TuiCurrency.MexicanPeso:\n    case TuiCurrencyCode.Dollar:\n    case TuiCurrencyCode.MexicanPeso:\n      return '$';\n    case TuiCurrency.EastCaribbeanDollar:\n    case TuiCurrencyCode.EastCaribbeanDollar:\n      return 'EC$';\n    case TuiCurrency.Euro:\n    case TuiCurrencyCode.Euro:\n      return '€';\n    case TuiCurrency.Forint:\n    case TuiCurrencyCode.Forint:\n      return 'Ft';\n    case TuiCurrency.GeorgianLari:\n    case TuiCurrencyCode.GeorgianLari:\n      return '₾';\n    case TuiCurrency.HongKongDollar:\n    case TuiCurrencyCode.HongKongDollar:\n      return 'HK$';\n    case TuiCurrency.Hryvnia:\n    case TuiCurrencyCode.Hryvnia:\n      return '₴';\n    case TuiCurrency.IndianRupee:\n    case TuiCurrencyCode.IndianRupee:\n      return '₹';\n    case TuiCurrency.IndonesianRupiah:\n    case TuiCurrencyCode.IndonesianRupiah:\n      return 'Rp';\n    case TuiCurrency.IranianRial:\n    case TuiCurrencyCode.IranianRial:\n      return 'IR';\n    case TuiCurrency.IsraeliShekel:\n    case TuiCurrencyCode.IsraeliShekel:\n      return '₪';\n    case TuiCurrency.KyrgyzstanSom:\n    case TuiCurrencyCode.KyrgyzstanSom:\n      return 'c';\n    case TuiCurrency.MalaysianRinggit:\n    case TuiCurrencyCode.MalaysianRinggit:\n      return 'RM';\n    case TuiCurrency.MoldovanLeu:\n    case TuiCurrencyCode.MoldovanLeu:\n      return 'L';\n    case TuiCurrency.MongolianTugrik:\n    case TuiCurrencyCode.MongolianTugrik:\n      return '₮';\n    case TuiCurrency.NewTurkmenManat:\n    case TuiCurrencyCode.NewTurkmenManat:\n      return 'TMT';\n    case TuiCurrency.PolandZloty:\n    case TuiCurrencyCode.PolandZloty:\n      return 'zł';\n    case TuiCurrency.Pound:\n    case TuiCurrencyCode.Pound:\n      return '£';\n    case TuiCurrency.Ruble:\n    case TuiCurrencyCode.Ruble:\n      return '₽';\n    case TuiCurrency.SaudiRiyal:\n    case TuiCurrencyCode.SaudiRiyal:\n      return 'SR';\n    case TuiCurrency.SerbianDinar:\n    case TuiCurrencyCode.SerbianDinar:\n      return 'DIN';\n    case TuiCurrency.SingaporeDollar:\n    case TuiCurrencyCode.SingaporeDollar:\n      return 'S$';\n    case TuiCurrency.SouthAfricanRand:\n    case TuiCurrencyCode.SouthAfricanRand:\n      return 'R';\n    case TuiCurrency.SriLankanRupee:\n    case TuiCurrencyCode.SriLankanRupee:\n      return 'Rs.';\n    case TuiCurrency.SwissFranc:\n    case TuiCurrencyCode.SwissFranc:\n      return '₣';\n    case TuiCurrency.TajikistaniSomoni:\n    case TuiCurrencyCode.TajikistaniSomoni:\n      return 'SM';\n    case TuiCurrency.Tenge:\n    case TuiCurrencyCode.Tenge:\n      return '₸';\n    case TuiCurrency.TurkishLira:\n    case TuiCurrencyCode.TurkishLira:\n      return '₺';\n    case TuiCurrency.UzbekSum:\n    case TuiCurrencyCode.UzbekSum:\n      return \"So'm\";\n    case TuiCurrency.VietnameseDong:\n    case TuiCurrencyCode.VietnameseDong:\n      return 'đ';\n    case TuiCurrency.Won:\n    case TuiCurrencyCode.Won:\n      return '₩';\n    case TuiCurrency.Yen:\n    case TuiCurrencyCode.Yen:\n      return '¥';\n    case TuiCurrency.YuanRenminbi:\n    case TuiCurrencyCode.YuanRenminbi:\n      return 'CN¥';\n    default:\n      return null;\n  }\n}\nfunction stringifyCurrency(currency) {\n  return currency === null || tuiIsString(currency) ? currency || '' : String(currency).padStart(3, '0');\n}\nfunction tuiFormatCurrency(currency) {\n  const stringifiedCurrency = stringifyCurrency(currency);\n  return tuiGetCurrencySymbol(stringifiedCurrency) || stringifiedCurrency;\n}\n\n// cspell:disable\nconst TUI_CODE_DICTIONARY = {\n  [TuiCurrency.Ruble]: TuiCurrencyCode.Ruble,\n  [TuiCurrency.Dollar]: TuiCurrencyCode.Dollar,\n  [TuiCurrency.MexicanPeso]: TuiCurrencyCode.MexicanPeso,\n  [TuiCurrency.MoldovanLeu]: TuiCurrencyCode.MoldovanLeu,\n  [TuiCurrency.PolandZloty]: TuiCurrencyCode.PolandZloty,\n  [TuiCurrency.SingaporeDollar]: TuiCurrencyCode.SingaporeDollar,\n  [TuiCurrency.AustralianDollar]: TuiCurrencyCode.AustralianDollar,\n  [TuiCurrency.HongKongDollar]: TuiCurrencyCode.HongKongDollar,\n  [TuiCurrency.CanadianDollar]: TuiCurrencyCode.CanadianDollar,\n  [TuiCurrency.CzechKoruna]: TuiCurrencyCode.CzechKoruna,\n  [TuiCurrency.EastCaribbeanDollar]: TuiCurrencyCode.EastCaribbeanDollar,\n  [TuiCurrency.Euro]: TuiCurrencyCode.Euro,\n  [TuiCurrency.Forint]: TuiCurrencyCode.Forint,\n  [TuiCurrency.Pound]: TuiCurrencyCode.Pound,\n  [TuiCurrency.Baht]: TuiCurrencyCode.Baht,\n  [TuiCurrency.BahrainiDinar]: TuiCurrencyCode.BahrainiDinar,\n  [TuiCurrency.TurkishLira]: TuiCurrencyCode.TurkishLira,\n  [TuiCurrency.YuanRenminbi]: TuiCurrencyCode.YuanRenminbi,\n  [TuiCurrency.Yen]: TuiCurrencyCode.Yen,\n  [TuiCurrency.IsraeliShekel]: TuiCurrencyCode.IsraeliShekel,\n  [TuiCurrency.IndianRupee]: TuiCurrencyCode.IndianRupee,\n  [TuiCurrency.SwissFranc]: TuiCurrencyCode.SwissFranc,\n  [TuiCurrency.ArmenianDram]: TuiCurrencyCode.ArmenianDram,\n  [TuiCurrency.Won]: TuiCurrencyCode.Won,\n  [TuiCurrency.Tenge]: TuiCurrencyCode.Tenge,\n  [TuiCurrency.Hryvnia]: TuiCurrencyCode.Hryvnia,\n  [TuiCurrency.UzbekSum]: TuiCurrencyCode.UzbekSum,\n  [TuiCurrency.KyrgyzstanSom]: TuiCurrencyCode.KyrgyzstanSom,\n  [TuiCurrency.Dirham]: TuiCurrencyCode.Dirham,\n  [TuiCurrency.TajikistaniSomoni]: TuiCurrencyCode.TajikistaniSomoni,\n  [TuiCurrency.MalaysianRinggit]: TuiCurrencyCode.MalaysianRinggit,\n  [TuiCurrency.BelarusianRuble]: TuiCurrencyCode.BelarusianRuble,\n  [TuiCurrency.GeorgianLari]: TuiCurrencyCode.GeorgianLari,\n  [TuiCurrency.AzerbaijaniManat]: TuiCurrencyCode.AzerbaijaniManat,\n  [TuiCurrency.SriLankanRupee]: TuiCurrencyCode.SriLankanRupee,\n  [TuiCurrency.SerbianDinar]: TuiCurrencyCode.SerbianDinar,\n  [TuiCurrency.SaudiRiyal]: TuiCurrencyCode.SaudiRiyal,\n  [TuiCurrency.MongolianTugrik]: TuiCurrencyCode.MongolianTugrik,\n  [TuiCurrency.SouthAfricanRand]: TuiCurrencyCode.SouthAfricanRand,\n  [TuiCurrency.IranianRial]: TuiCurrencyCode.IranianRial,\n  [TuiCurrency.IndonesianRupiah]: TuiCurrencyCode.IndonesianRupiah,\n  [TuiCurrency.VietnameseDong]: TuiCurrencyCode.VietnameseDong,\n  [TuiCurrency.NewTurkmenManat]: TuiCurrencyCode.NewTurkmenManat,\n  [TuiCurrency.BrazilianReal]: TuiCurrencyCode.BrazilianReal\n};\nfunction tuiGetCodeByCurrency(code) {\n  return TUI_CODE_DICTIONARY[code] ?? null;\n}\n\n// cspell:disable\nconst TUI_CURRENCY_DICTIONARY = {\n  [TuiCurrencyCode.Ruble]: TuiCurrency.Ruble,\n  [TuiCurrencyCode.Dollar]: TuiCurrency.Dollar,\n  [TuiCurrencyCode.MexicanPeso]: TuiCurrency.MexicanPeso,\n  [TuiCurrencyCode.MoldovanLeu]: TuiCurrency.MoldovanLeu,\n  [TuiCurrencyCode.PolandZloty]: TuiCurrency.PolandZloty,\n  [TuiCurrencyCode.SingaporeDollar]: TuiCurrency.SingaporeDollar,\n  [TuiCurrencyCode.AustralianDollar]: TuiCurrency.AustralianDollar,\n  [TuiCurrencyCode.HongKongDollar]: TuiCurrency.HongKongDollar,\n  [TuiCurrencyCode.CanadianDollar]: TuiCurrency.CanadianDollar,\n  [TuiCurrencyCode.CzechKoruna]: TuiCurrency.CzechKoruna,\n  [TuiCurrencyCode.EastCaribbeanDollar]: TuiCurrency.EastCaribbeanDollar,\n  [TuiCurrencyCode.Euro]: TuiCurrency.Euro,\n  [TuiCurrencyCode.Forint]: TuiCurrency.Forint,\n  [TuiCurrencyCode.Pound]: TuiCurrency.Pound,\n  [TuiCurrencyCode.Baht]: TuiCurrency.Baht,\n  [TuiCurrencyCode.BahrainiDinar]: TuiCurrency.BahrainiDinar,\n  [TuiCurrencyCode.TurkishLira]: TuiCurrency.TurkishLira,\n  [TuiCurrencyCode.YuanRenminbi]: TuiCurrency.YuanRenminbi,\n  [TuiCurrencyCode.Yen]: TuiCurrency.Yen,\n  [TuiCurrencyCode.IsraeliShekel]: TuiCurrency.IsraeliShekel,\n  [TuiCurrencyCode.IndianRupee]: TuiCurrency.IndianRupee,\n  [TuiCurrencyCode.SwissFranc]: TuiCurrency.SwissFranc,\n  [TuiCurrencyCode.ArmenianDram]: TuiCurrency.ArmenianDram,\n  [TuiCurrencyCode.Won]: TuiCurrency.Won,\n  [TuiCurrencyCode.Tenge]: TuiCurrency.Tenge,\n  [TuiCurrencyCode.Hryvnia]: TuiCurrency.Hryvnia,\n  [TuiCurrencyCode.UzbekSum]: TuiCurrency.UzbekSum,\n  [TuiCurrencyCode.KyrgyzstanSom]: TuiCurrency.KyrgyzstanSom,\n  [TuiCurrencyCode.Dirham]: TuiCurrency.Dirham,\n  [TuiCurrencyCode.TajikistaniSomoni]: TuiCurrency.TajikistaniSomoni,\n  [TuiCurrencyCode.MalaysianRinggit]: TuiCurrency.MalaysianRinggit,\n  [TuiCurrencyCode.BelarusianRuble]: TuiCurrency.BelarusianRuble,\n  [TuiCurrencyCode.GeorgianLari]: TuiCurrency.GeorgianLari,\n  [TuiCurrencyCode.AzerbaijaniManat]: TuiCurrency.AzerbaijaniManat,\n  [TuiCurrencyCode.SriLankanRupee]: TuiCurrency.SriLankanRupee,\n  [TuiCurrencyCode.SerbianDinar]: TuiCurrency.SerbianDinar,\n  [TuiCurrencyCode.SaudiRiyal]: TuiCurrency.SaudiRiyal,\n  [TuiCurrencyCode.MongolianTugrik]: TuiCurrency.MongolianTugrik,\n  [TuiCurrencyCode.SouthAfricanRand]: TuiCurrency.SouthAfricanRand,\n  [TuiCurrencyCode.IranianRial]: TuiCurrency.IranianRial,\n  [TuiCurrencyCode.IndonesianRupiah]: TuiCurrency.IndonesianRupiah,\n  [TuiCurrencyCode.VietnameseDong]: TuiCurrency.VietnameseDong,\n  [TuiCurrencyCode.NewTurkmenManat]: TuiCurrency.NewTurkmenManat,\n  [TuiCurrencyCode.BrazilianReal]: TuiCurrency.BrazilianReal\n};\nfunction tuiGetCurrencyByCode(currency) {\n  return TUI_CURRENCY_DICTIONARY[currency] ?? null;\n}\n\n// https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_(IIN)\nconst TUI_BIN_TABLE = [['mir', 2200, 2204], ['mastercard', 2221, 2720], ['jcb', 3528, 3589], ['amex', 34], ['amex', 37], ['dinersclub', 36], ['electron', 4026], ['electron', 4175], ['electron', 4405], ['electron', 4508], ['electron', 4844], ['electron', 4913], ['electron', 4917], ['visa', 4], ['verve', 506099, 506198], ['verve', 507865, 507964], ['maestro', 5018], ['maestro', 5020], ['maestro', 5038], ['maestro', 5090], ['maestro', 5890], ['maestro', 5893], ['rupay', 508], ['maestro', 50], ['mastercard', 51, 55], ['maestro', 56], ['maestro', 58], ['mastercard', 5], ['maestro', 6000], ['maestro', 6304], ['maestro', 6759, 6763], ['verve', 650002, 650027], ['maestro', 676770], ['maestro', 676774], ['discover', 644, 649], ['discover', 6011], ['rupay', 60], ['unionpay', 62], ['discover', 65], ['maestro', 6], ['rupay', 81, 82], ['uzcard', 8600], ['humo', 9860]];\nfunction tuiGetPaymentSystem(cardNumber, supported) {\n  if (!cardNumber) {\n    return null;\n  }\n  const row = TUI_BIN_TABLE.find(([paymentSystem, start, end = start]) => {\n    const cardNumberNumeric = Number.parseInt(cardNumber.slice(0, String(start).length), 10);\n    const match = cardNumberNumeric >= start && cardNumberNumeric <= end;\n    return match && (!supported?.length || supported.includes(paymentSystem));\n  });\n  return row?.[0] ?? null;\n}\nfunction tuiIsMaestro(three, two, one) {\n  if (one === 6) {\n    return true;\n  }\n  if (two === 50 || two > 55 && two < 59) {\n    return true;\n  }\n  if (three < 500) {\n    return false;\n  }\n  return three < 510;\n}\nfunction tuiIsMastercard(four, two, one) {\n  if (one === 5) {\n    return true;\n  }\n  if (two < 10) {\n    return false;\n  }\n  if (two > 50 && two < 56) {\n    return true;\n  }\n  if (four < 1000) {\n    return false;\n  }\n  return four > 2220 && four < 2721;\n}\nfunction tuiIsMir(four) {\n  return four > 2199 && four < 2205;\n}\nfunction tuiIsElectron(four) {\n  switch (four) {\n    case 4026:\n    case 4175:\n    case 4405:\n    case 4508:\n    case 4844:\n    case 4913:\n    case 4917:\n      return true;\n    default:\n      return false;\n  }\n}\nfunction tuiIsVisa(one) {\n  return one === 4;\n}\n\n/**\n * Validates card number length using payment system dictionary\n */\nfunction tuiIsCardLengthValid(cardNumber) {\n  const {\n    length\n  } = cardNumber;\n  const paymentSystem = tuiGetPaymentSystem(cardNumber);\n  switch (paymentSystem) {\n    case 'electron':\n      return length === 16;\n    case 'maestro':\n      return length > 11 && length < 20;\n    case 'mastercard':\n    case 'mir':\n      return length > 15 && length < 20;\n    case 'visa':\n      return length > 12 && length < 20;\n    default:\n      return length > 8 && length < 20;\n  }\n}\n\n/**\n * Validates card number using Luhn algorithm\n */\nfunction tuiIsCardNumberValid(value) {\n  const cardNumber = String(value).replace(TUI_NON_DIGITS_REGEXP, '');\n  const {\n    length\n  } = cardNumber;\n  const arr = cardNumber.split('').map((char, index) => {\n    const digit = parseInt(char, 10);\n    if ((index + length) % 2 === 0) {\n      const digitX2 = digit * 2;\n      return digitX2 > 9 ? digitX2 - 9 : digitX2;\n    }\n    return digit;\n  });\n  return !(arr.reduce((a, b) => a + b, 0) % 10);\n}\nfunction tuiIsExpireValid(expire, today = new Date()) {\n  const currentMonth = today.getMonth() + 1;\n  const currentYear = today.getFullYear() - 2000;\n  const expireMonth = tuiClamp(parseInt(expire.slice(0, 2), 10), 1, 12);\n  const expireYear = tuiClamp(parseInt(expire.slice(-2), 10), 0, 99);\n  return expireYear > currentYear || currentYear === expireYear && expireMonth >= currentMonth;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_BIN_TABLE, TUI_CODE_DICTIONARY, TUI_CURRENCY_DICTIONARY, tuiFormatCurrency, tuiGetCodeByCurrency, tuiGetCurrencyByCode, tuiGetCurrencySymbol, tuiGetPaymentSystem, tuiIsCardLengthValid, tuiIsCardNumberValid, tuiIsElectron, tuiIsExpireValid, tuiIsMaestro, tuiIsMastercard, tuiIsMir, tuiIsVisa };\n", "import { tuiIsCardLengthValid, tuiIsCardNumberValid } from '@taiga-ui/addon-commerce/utils';\nimport { TUI_DIGIT_REGEXP } from '@taiga-ui/cdk/constants';\nimport { maskitoDateOptionsGenerator } from '@maskito/kit';\nconst tuiDefaultCardValidator = card => card.length > 11 && tuiIsCardLengthValid(card) && tuiIsCardNumberValid(card);\nconst TUI_MASK_CARD = {\n  mask: [TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, ' ', TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, ' ', TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, ' ', TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, ' ', TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP, TUI_DIGIT_REGEXP]\n};\nconst MAP = {\n  А: 'F',\n  В: 'D',\n  Г: 'U',\n  Д: 'L',\n  Е: 'T',\n  З: 'P',\n  И: 'B',\n  Й: 'Q',\n  К: 'R',\n  Л: 'K',\n  М: 'V',\n  Н: 'Y',\n  О: 'J',\n  П: 'G',\n  Р: 'H',\n  С: 'C',\n  Т: 'N',\n  У: 'E',\n  Ф: 'A',\n  Ц: 'W',\n  Ч: 'X',\n  Ш: 'I',\n  Щ: 'O',\n  Ы: 'S',\n  Ь: 'M',\n  Я: 'Z'\n};\nfunction toEnglishUppercase(value) {\n  return value.toUpperCase().split('').map(char => MAP[char] || char).join('');\n}\nconst TUI_MASK_CARD_HOLDER = {\n  mask: /^[a-z\\s]+$/i,\n  preprocessors: [({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    return {\n      elementState: {\n        selection,\n        value: toEnglishUppercase(value)\n      },\n      data: toEnglishUppercase(data)\n    };\n  }]\n};\nconst TUI_MASK_CVC = length => ({\n  mask: new Array(length).fill(TUI_DIGIT_REGEXP)\n});\nconst TUI_MASK_EXPIRE = maskitoDateOptionsGenerator({\n  mode: 'mm/yy',\n  separator: '/'\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_MASK_CARD, TUI_MASK_CARD_HOLDER, TUI_MASK_CVC, TUI_MASK_EXPIRE, tuiDefaultCardValidator };\n", "import { tuiCreateTokenFromFactory, tuiCreateToken } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiExtractI18n } from '@taiga-ui/i18n/utils';\nimport { of } from 'rxjs';\n\n/**\n * Number and card number i18n\n */\nconst TUI_CARD_NUMBER_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('cardNumber'));\n/**\n * Expiry and card expiry i18n\n */\nconst TUI_CARD_EXPIRY_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('cardExpiry'));\n/**\n * Card CVC number text [mobile, desktop]\n */\nconst TUI_CARD_CVC_TEXTS = tuiCreateToken(of(['CVC', 'CVC/CVV']));\nconst TUI_PAYMENT_SYSTEM_ICONS = tuiCreateToken({\n  mir: '@tui.mir',\n  visa: '@tui.visa',\n  electron: '@tui.electron',\n  mastercard: '@tui.mastercard',\n  maestro: '@tui.maestro',\n  amex: '@tui.amex',\n  dinersclub: '@tui.diners-club',\n  discover: '@tui.discover',\n  humo: '@tui.humo',\n  jcb: '@tui.jcb',\n  rupay: '@tui.ru-pay',\n  unionpay: '@tui.union-pay',\n  uzcard: '@tui.uzcard',\n  verve: '@tui.verve'\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CARD_CVC_TEXTS, TUI_CARD_EXPIRY_TEXTS, TUI_CARD_NUMBER_TEXTS, TUI_PAYMENT_SYSTEM_ICONS };\n", "import * as i0 from '@angular/core';\nimport { inject, signal, computed, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output } from '@angular/core';\nimport { toSignal, toObservable } from '@angular/core/rxjs-interop';\nimport { NgControl, DefaultValueAccessor } from '@angular/forms';\nimport * as i1 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport { TUI_MASK_CARD } from '@taiga-ui/addon-commerce/constants';\nimport { TUI_PAYMENT_SYSTEM_ICONS } from '@taiga-ui/addon-commerce/tokens';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport * as i2 from '@taiga-ui/core/components/textfield';\nimport { TuiTextfieldContent, TuiWithTextfield } from '@taiga-ui/core/components/textfield';\nimport { tuiInjectIconResolver } from '@taiga-ui/core/tokens';\nimport { tuiMaskito } from '@taiga-ui/kit/utils';\nimport { timer, switchMap, map, startWith, distinctUntilChanged, skip } from 'rxjs';\nimport { tuiGetPaymentSystem } from '@taiga-ui/addon-commerce/utils';\nimport { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';\nconst _c0 = [\"tuiInputCard\", \"\"];\nfunction TuiInputCard_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.image())(\"src\", ctx_r0.image(), i0.ɵɵsanitizeUrl);\n  }\n}\nconst TUI_INPUT_CARD_DEFAULT_OPTIONS = {\n  icon: null,\n  paymentSystemHandler: tuiGetPaymentSystem,\n  autocomplete: false\n};\nconst TUI_INPUT_CARD_OPTIONS = tuiCreateToken(TUI_INPUT_CARD_DEFAULT_OPTIONS);\nfunction tuiInputCardOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_CARD_OPTIONS, options, TUI_INPUT_CARD_DEFAULT_OPTIONS);\n}\nclass TuiInputCard {\n  constructor() {\n    this.icons = inject(TUI_PAYMENT_SYSTEM_ICONS);\n    this.options = inject(TUI_INPUT_CARD_OPTIONS);\n    this.resolver = tuiInjectIconResolver();\n    this.control = inject(NgControl);\n    this.value = toSignal(timer(0).pipe(switchMap(() => tuiControlValue(this.control))), {\n      initialValue: ''\n    });\n    this.icon = signal(this.options.icon);\n    this.accessor = inject(DefaultValueAccessor, {\n      self: true,\n      optional: true\n    });\n    this.mask = tuiMaskito(TUI_MASK_CARD);\n    this.image = computed(() => {\n      const system = this.options.paymentSystemHandler(this.value());\n      const icon = system && this.icons[system] && this.resolver(this.icons[system]);\n      const url = this.icon() || icon;\n      return url && this.icon() !== '' ? url : null;\n    });\n    this.autocomplete = this.options.autocomplete;\n    this.binChange = toObservable(this.value).pipe(map(value => value.length < 6 ? null : value.replace(' ', '').slice(0, 6)), startWith(null), distinctUntilChanged(), skip(1));\n  }\n  set iconValue(icon) {\n    this.icon.set(icon);\n  }\n  ngOnInit() {\n    if (!this.accessor) {\n      return;\n    }\n    const onChanges = this.accessor.onChange.bind(this.accessor);\n    this.accessor.onChange = value => onChanges(value.replaceAll(' ', ''));\n  }\n  static {\n    this.ɵfac = function TuiInputCard_Factory(t) {\n      return new (t || TuiInputCard)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputCard,\n      selectors: [[\"input\", \"tuiInputCard\", \"\"]],\n      hostAttrs: [\"inputmode\", \"numeric\", \"placeholder\", \"0000 0000 0000 0000\"],\n      hostVars: 1,\n      hostBindings: function TuiInputCard_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete ? \"cc-number\" : \"off\");\n        }\n      },\n      inputs: {\n        autocomplete: \"autocomplete\",\n        iconValue: [0, \"icon\", \"iconValue\"]\n      },\n      outputs: {\n        binChange: \"binChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1.MaskitoDirective, i2.TuiWithTextfield]), i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 1,\n      vars: 0,\n      consts: [[\"alt\", \"\", \"class\", \"t-payment-system\", 3, \"hidden\", \"src\", 4, \"tuiTextfieldContent\"], [\"alt\", \"\", 1, \"t-payment-system\", 3, \"hidden\", \"src\"]],\n      template: function TuiInputCard_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiInputCard_img_0_Template, 1, 2, \"img\", 0);\n        }\n      },\n      dependencies: [TuiTextfieldContent],\n      styles: [\"tui-textfield .t-payment-system{order:-1;inline-size:1.5rem}tui-textfield[data-size=l] .t-payment-system{inline-size:2rem}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputCard, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'input[tuiInputCard]',\n      imports: [TuiTextfieldContent],\n      template: `\n        <img\n            *tuiTextfieldContent\n            alt=\"\"\n            class=\"t-payment-system\"\n            [hidden]=\"!image()\"\n            [src]=\"image()\"\n        />\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      hostDirectives: [MaskitoDirective, TuiWithTextfield],\n      host: {\n        inputmode: 'numeric',\n        placeholder: '0000 0000 0000 0000',\n        '[autocomplete]': 'autocomplete ? \"cc-number\" : \"off\"'\n      },\n      styles: [\"tui-textfield .t-payment-system{order:-1;inline-size:1.5rem}tui-textfield[data-size=l] .t-payment-system{inline-size:2rem}\\n\"]\n    }]\n  }], null, {\n    autocomplete: [{\n      type: Input\n    }],\n    binChange: [{\n      type: Output\n    }],\n    iconValue: [{\n      type: Input,\n      args: ['icon']\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_CARD_DEFAULT_OPTIONS, TUI_INPUT_CARD_OPTIONS, TuiInputCard, tuiInputCardOptionsProvider };\n", "import { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i0 from '@angular/core';\nimport { inject, Pipe } from '@angular/core';\nimport { tuiFormatCurrency } from '@taiga-ui/addon-commerce/utils';\nimport { CHAR_MINUS, CHAR_PLUS, CHAR_NO_BREAK_SPACE } from '@taiga-ui/cdk/constants';\nimport { TUI_NUMBER_FORMAT } from '@taiga-ui/core/tokens';\nimport { tuiFormatNumber } from '@taiga-ui/core/utils/format';\nimport { map } from 'rxjs';\nconst TUI_AMOUNT_DEFAULT_OPTIONS = {\n  currency: null,\n  currencyAlign: 'left',\n  sign: 'negative-only'\n};\nconst TUI_AMOUNT_OPTIONS = tuiCreateToken(TUI_AMOUNT_DEFAULT_OPTIONS);\nfunction tuiAmountOptionsProvider(options) {\n  return tuiProvideOptions(TUI_AMOUNT_OPTIONS, options, TUI_AMOUNT_DEFAULT_OPTIONS);\n}\nfunction tuiFormatSignSymbol(value, sign) {\n  if (sign === 'never' || !value || sign === 'negative-only' && value > 0) {\n    return '';\n  }\n  if (sign === 'force-negative' || value < 0 && sign !== 'force-positive') {\n    return CHAR_MINUS;\n  }\n  return CHAR_PLUS;\n}\nconst DEFAULT_PRECISION = 2;\nclass TuiAmountPipe {\n  constructor() {\n    this.options = inject(TUI_AMOUNT_OPTIONS);\n    this.format = inject(TUI_NUMBER_FORMAT);\n  }\n  transform(value, currency = this.options.currency, currencyAlign = this.options.currencyAlign) {\n    return this.format.pipe(map(format => {\n      const currencySymbol = tuiFormatCurrency(currency);\n      const formatted = tuiFormatNumber(Math.abs(value), {\n        ...format,\n        precision: Number.isNaN(format.precision) ? DEFAULT_PRECISION : format.precision\n      });\n      const sign = formatted === '0' ? '' : tuiFormatSignSymbol(value, this.options.sign);\n      const space = currencySymbol && (currencySymbol?.length > 1 || currencyAlign === 'right') ? CHAR_NO_BREAK_SPACE : '';\n      return currencyAlign === 'right' ? `${sign}${formatted}${space}${currencySymbol}` : `${sign}${currencySymbol}${space}${formatted}`;\n    }));\n  }\n  static {\n    this.ɵfac = function TuiAmountPipe_Factory(t) {\n      return new (t || TuiAmountPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiAmount\",\n      type: TuiAmountPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiAmountPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiAmount'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_AMOUNT_DEFAULT_OPTIONS, TUI_AMOUNT_OPTIONS, TuiAmountPipe, tuiAmountOptionsProvider, tuiFormatSignSymbol };\n", "import * as i0 from '@angular/core';\nimport { Pipe } from '@angular/core';\nimport { tuiFormatCurrency } from '@taiga-ui/addon-commerce/utils';\nclass TuiCurrencyPipe {\n  transform(currency) {\n    return tuiFormatCurrency(currency);\n  }\n  static {\n    this.ɵfac = function TuiCurrencyPipe_Factory(t) {\n      return new (t || TuiCurrencyPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiCurrency\",\n      type: TuiCurrencyPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCurrencyPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiCurrency'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCurrencyPipe };\n", "import * as i0 from '@angular/core';\nimport { inject, Injector, INJECTOR, Pipe } from '@angular/core';\nimport { TuiAmountPipe } from '@taiga-ui/addon-commerce/pipes/amount';\nimport { TUI_NUMBER_FORMAT } from '@taiga-ui/core/tokens';\nimport { switchMap, map } from 'rxjs';\nclass TuiDecimalPipe {\n  constructor() {\n    this.format = inject(TUI_NUMBER_FORMAT);\n    this.amountPipe = Injector.create({\n      providers: [{\n        provide: TuiAmountPipe\n      }],\n      parent: inject(INJECTOR)\n    }).get(TuiAmountPipe);\n  }\n  transform(value, currency = '') {\n    return this.format.pipe(switchMap(format => this.amountPipe.transform(value, currency).pipe(map(value => {\n      const [, decimal] = value.split(format.decimalSeparator);\n      return decimal ? `${format.decimalSeparator}${decimal}` : '';\n    }))));\n  }\n  static {\n    this.ɵfac = function TuiDecimalPipe_Factory(t) {\n      return new (t || TuiDecimalPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiDecimal\",\n      type: TuiDecimalPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiDecimalPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiDecimal'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiDecimalPipe };\n", "import * as i0 from '@angular/core';\nimport { Pipe } from '@angular/core';\nclass TuiFormatCardPipe {\n  transform(value = '', cardPrefilled = false) {\n    return value && !cardPrefilled ? value.split('').map((char, index) => index && index % 4 === 0 ? ` ${char}` : char).join('') : '';\n  }\n  static {\n    this.ɵfac = function TuiFormatCardPipe_Factory(t) {\n      return new (t || TuiFormatCardPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiFormatCard\",\n      type: TuiFormatCardPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFormatCardPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiFormatCard'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiFormatCardPipe };\n", "import { __decorate } from 'tslib';\nimport { NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, computed, EventEmitter, Component, ChangeDetectionStrategy, ViewChild, Input, Output } from '@angular/core';\nimport { toSignal, takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MaskitoDirective } from '@maskito/angular';\nimport { WaResizeObserver } from '@ng-web-apis/resize-observer';\nimport { tuiDefaultCardValidator, TUI_MASK_CVC, TUI_MASK_CARD, TUI_MASK_EXPIRE } from '@taiga-ui/addon-commerce/constants';\nimport { TuiFormatCardPipe } from '@taiga-ui/addon-commerce/pipes';\nimport { TUI_CARD_NUMBER_TEXTS, TUI_CARD_EXPIRY_TEXTS, TUI_CARD_CVC_TEXTS, TUI_PAYMENT_SYSTEM_ICONS } from '@taiga-ui/addon-commerce/tokens';\nimport { TuiControl, tuiAsControl } from '@taiga-ui/cdk/classes';\nimport { TUI_NON_DIGIT_REGEXP } from '@taiga-ui/cdk/constants';\nimport { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';\nimport { tuiHovered, TuiHoveredService } from '@taiga-ui/cdk/directives/hovered';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { TuiMapperPipe } from '@taiga-ui/cdk/pipes/mapper';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { TUI_IS_WEBKIT } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement, tuiIsElement, tuiIsInput } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsNativeFocusedIn, tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiCreateToken, tuiProvideOptions, tuiCreateTokenFromFactory, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiAsDataListHost } from '@taiga-ui/core/components/data-list';\nimport { TuiIcon, TuiIconPipe } from '@taiga-ui/core/components/icon';\nimport * as i3 from '@taiga-ui/core/components/textfield';\nimport { TUI_TEXTFIELD_OPTIONS, TuiWithTextfieldDropdown } from '@taiga-ui/core/components/textfield';\nimport * as i1 from '@taiga-ui/core/directives/appearance';\nimport { tuiAppearanceMode, tuiAppearance, tuiAppearanceState, tuiAppearanceFocus, TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i2 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownDirective, tuiDropdownOpen, tuiDropdownOptionsProvider, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\nimport { TUI_MEDIA, TUI_COMMON_ICONS } from '@taiga-ui/core/tokens';\nimport { TuiChevron } from '@taiga-ui/kit/directives/chevron';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport { startWith, switchMap, combineLatest, of, map, Subject, merge, timer, EMPTY } from 'rxjs';\nimport { TUI_INPUT_CARD_DEFAULT_OPTIONS } from '@taiga-ui/addon-commerce/components/input-card';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nconst _c0 = [\"inputCard\"];\nconst _c1 = [\"inputExpire\"];\nconst _c2 = [\"inputCVC\"];\nconst _c3 = () => ({\n  standalone: true\n});\nfunction TuiInputCardGroup_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 7);\n    i0.ɵɵlistener(\"click.zoneless.prevent\", function TuiInputCardGroup_label_1_Template_label_click_zoneless_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelementStart(1, \"input\", 16, 2);\n    i0.ɵɵpipe(3, \"tuiMapper\");\n    i0.ɵɵlistener(\"focus\", function TuiInputCardGroup_label_1_Template_input_focus_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    })(\"ngModelChange\", function TuiInputCardGroup_label_1_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onCardChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵlistener(\"waResizeObserver\", function TuiInputCardGroup_label_1_Template_span_waResizeObserver_4_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onResize());\n    });\n    i0.ɵɵelement(5, \"span\", 18, 3);\n    i0.ɵɵelementStart(7, \"span\", 19)(8, \"span\", 20);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 9);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_24_0;\n    const formattedCard_r4 = ctx.tuiLet;\n    const ghost_r5 = i0.ɵɵreference(6);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"t-input_filled\", ctx_r2.card.length)(\"t-input_inert\", ctx_r2.cardPrefilled);\n    i0.ɵɵproperty(\"autocomplete\", ctx_r2.autocomplete ? \"cc-number\" : \"off\")(\"disabled\", ctx_r2.disabled())(\"maskito\", ctx_r2.maskCard)(\"ngModel\", formattedCard_r4)(\"ngModelOptions\", i0.ɵɵpureFunction0(27, _c3))(\"placeholder\", ctx_r2.cardPrefilled ? \"\" : ctx_r2.placeholder || ctx_r2.exampleText)(\"readOnly\", ctx_r2.readOnly())(\"tabIndex\", ctx_r2.cardFocusable ? 0 : -1);\n    i0.ɵɵattribute(\"aria-invalid\", !ctx_r2.cardPrefilled && !i0.ɵɵpipeBind2(3, 24, ctx_r2.card, ctx_r2.cardValidator))(\"id\", ctx_r2.id + \"_card\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"t-collapsed_enable-mask\", ctx_r2.cardCollapsed);\n    i0.ɵɵattribute(\"data-before\", ctx_r2.masked);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"textContent\", formattedCard_r4.slice(-ctx_r2.tailLength));\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"transform\", ctx_r2.transform(ghost_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", formattedCard_r4, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"t-label_raised\", ctx_r2.labelRaised());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", (tmp_24_0 = ctx_r2.texts()) == null ? null : tmp_24_0.cardNumberText, \" \");\n  }\n}\nfunction TuiInputCardGroup_div_16_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 23);\n    i0.ɵɵpipe(1, \"tuiIcon\");\n  }\n  if (rf & 2) {\n    const src_r6 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind1(1, 1, src_r6), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction TuiInputCardGroup_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, TuiInputCardGroup_div_16_img_1_Template, 2, 3, \"img\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.content);\n  }\n}\nfunction TuiInputCardGroup_tui_icon_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-icon\", 24);\n    i0.ɵɵlistener(\"click\", function TuiInputCardGroup_tui_icon_17_Template_tui_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r2.icons.close);\n  }\n}\nfunction TuiInputCardGroup_tui_icon_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-icon\", 25);\n    i0.ɵɵlistener(\"click\", function TuiInputCardGroup_tui_icon_18_Template_tui_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggle());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS = {\n  ...TUI_INPUT_CARD_DEFAULT_OPTIONS,\n  cardValidator: tuiDefaultCardValidator,\n  exampleText: '0000 0000 0000 0000',\n  exampleTextCVC: '000',\n  cvcHidden: true,\n  inputs: {\n    cvc: true,\n    expire: true\n  }\n};\nconst TUI_INPUT_CARD_GROUP_OPTIONS = tuiCreateToken(TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS);\nfunction tuiInputCardGroupOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_CARD_GROUP_OPTIONS, options, TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS);\n}\n\n/**\n * InputCardGroup texts\n */\nconst TUI_INPUT_CARD_GROUP_TEXTS = tuiCreateTokenFromFactory(() => {\n  const win = inject(WA_WINDOW);\n  const cardNumberTexts = inject(TUI_CARD_NUMBER_TEXTS);\n  const expiryTexts = inject(TUI_CARD_EXPIRY_TEXTS);\n  const cvcTexts = inject(TUI_CARD_CVC_TEXTS);\n  const {\n    desktopSmall\n  } = inject(TUI_MEDIA);\n  const media = win.matchMedia(`screen and (min-width: ${(desktopSmall - 1) / 16}em)`);\n  return tuiTypedFromEvent(media, 'change').pipe(startWith(null), switchMap(() => combineLatest([of(Number(media.matches)), cardNumberTexts, expiryTexts, cvcTexts])), map(([index, cardNumber, expiry, cvcTexts]) => ({\n    cardNumberText: cardNumber[index] ?? '',\n    expiryText: expiry[index] ?? '',\n    cvcText: cvcTexts[index] ?? ''\n  })));\n});\nclass TuiInputCardGroup extends TuiControl {\n  constructor() {\n    super(...arguments);\n    this.focus$ = new Subject();\n    this.expirePrefilled = false;\n    this.paymentSystems = inject(TUI_PAYMENT_SYSTEM_ICONS);\n    this.options = inject(TUI_INPUT_CARD_GROUP_OPTIONS);\n    this.el = tuiInjectElement();\n    this.hover = tuiHovered();\n    this.focusedIn = toSignal(merge(tuiTypedFromEvent(this.el, 'focusin'), tuiTypedFromEvent(this.el, 'focusout')).pipe(map(() => tuiIsNativeFocusedIn(this.el))), {\n      initialValue: false\n    });\n    this.exampleTextCVC = this.options.exampleTextCVC;\n    this.cvcHidden = this.options.cvcHidden;\n    this.maskCVC = TUI_MASK_CVC(3);\n    this.dropdown = inject(TuiDropdownDirective);\n    this.maskCard = TUI_MASK_CARD;\n    this.maskExpire = TUI_MASK_EXPIRE;\n    this.icons = inject(TUI_COMMON_ICONS);\n    this.texts = toSignal(inject(TUI_INPUT_CARD_GROUP_TEXTS));\n    this.open = tuiDropdownOpen();\n    this.$ = inject(TUI_IS_WEBKIT) ? this.focus$.pipe(switchMap(() => timer(100)), takeUntilDestroyed()).subscribe(() => this.expire ? this.focusCVC() : this.focusExpire()) : EMPTY;\n    this.m = tuiAppearanceMode(this.mode);\n    this.appearance = tuiAppearance(inject(TUI_TEXTFIELD_OPTIONS).appearance);\n    this.state = tuiAppearanceState(\n    // eslint-disable-next-line no-nested-ternary\n    computed(() => this.disabled() ? 'disabled' : this.hover() ? 'hover' : null));\n    this.focus = tuiAppearanceFocus(computed(() => this.open() || this.focusedIn()));\n    this.labelRaised = computed(() => this.focus() && !this.readOnly() || !!this.value()?.card);\n    this.hasCleaner = computed(() => !!this.value()?.card && this.interactive());\n    /**\n     * @deprecated use 'placeholder' instead\n     */\n    this.exampleText = this.options.exampleText;\n    this.placeholder = this.options.exampleText;\n    this.inputs = this.options.inputs;\n    this.cardValidator = this.options.cardValidator;\n    this.icon = this.options.icon;\n    this.id = tuiInjectId();\n    this.autocomplete = this.options.autocomplete;\n    this.binChange = new EventEmitter();\n  }\n  set codeLength(length) {\n    this.exampleTextCVC = '0'.repeat(length);\n    this.maskCVC = TUI_MASK_CVC(length);\n  }\n  get bin() {\n    return this.card.length < 6 ? null : this.card.slice(0, 6);\n  }\n  writeValue(value) {\n    const {\n      bin\n    } = this;\n    super.writeValue(value);\n    this.updateBin(bin);\n    this.expirePrefilled = !!this.expire && this.cardPrefilled;\n  }\n  /** Public API for manual focus management */\n  focusCard() {\n    this.inputCard?.nativeElement.focus({\n      preventScroll: true\n    });\n  }\n  focusExpire() {\n    if (this.inputs.expire) {\n      this.inputExpire?.nativeElement.focus({\n        preventScroll: true\n      });\n    } else {\n      this.inputCVC?.nativeElement.focus({\n        preventScroll: true\n      });\n    }\n  }\n  focusCVC() {\n    this.inputCVC?.nativeElement.focus({\n      preventScroll: true\n    });\n  }\n  handleOption(option) {\n    const {\n      card = '',\n      expire = '',\n      cvc = ''\n    } = option || {};\n    const {\n      bin\n    } = this;\n    const element = !card && this.inputCard?.nativeElement || !expire && this.inputExpire?.nativeElement || this.inputCVC?.nativeElement;\n    this.onChange({\n      card,\n      expire,\n      cvc\n    });\n    this.updateBin(bin);\n    this.open.set(false);\n    this.expirePrefilled = !!expire;\n    element?.focus();\n  }\n  clear() {\n    this.expirePrefilled = false;\n    [this.inputCVC, this.inputExpire, this.inputCard].forEach(e => {\n      e?.nativeElement.focus();\n      e?.nativeElement.select();\n      e?.nativeElement.ownerDocument.execCommand('delete');\n    });\n    this.onChange(null);\n  }\n  onResize() {\n    this.cdr.detectChanges();\n  }\n  get content() {\n    const system = this.getPaymentSystem(this.card);\n    return this.icon || system && this.paymentSystems[system];\n  }\n  get card() {\n    return this.value()?.card || '';\n  }\n  get expire() {\n    return this.value()?.expire || '';\n  }\n  get cvc() {\n    return this.value()?.cvc || '';\n  }\n  get cardCollapsed() {\n    return this.isFocusable(this.card) && !tuiIsNativeFocused(this.inputCard?.nativeElement);\n  }\n  get tailLength() {\n    return this.card.length % 4 > 0 ? 5 : 4;\n  }\n  get cardPrefilled() {\n    return !!this.card.match(TUI_NON_DIGIT_REGEXP);\n  }\n  get cvcPrefilled() {\n    return !this.inputs.cvc || !!this.cvc.match(TUI_NON_DIGIT_REGEXP);\n  }\n  get cardFocusable() {\n    return !this.cardPrefilled;\n  }\n  get expireFocusable() {\n    return this.isFocusable(this.card) && !this.expirePrefilled;\n  }\n  get cvcFocusable() {\n    return this.isFocusable(this.card);\n  }\n  get masked() {\n    return this.cardPrefilled ? `*${this.card.slice(-4)}` : '*';\n  }\n  onCardChange(card) {\n    const {\n      value,\n      bin\n    } = this;\n    const parsed = card.split(' ').join('');\n    if (value()?.card === parsed) {\n      return;\n    }\n    this.updateProperty(parsed, 'card');\n    this.updateBin(bin);\n    if (this.cardValidator(this.card) && !value()?.expire && this.inputExpire) {\n      this.focusExpire();\n      // Safari autofill focus jerk workaround\n      this.focus$.next();\n    }\n  }\n  onExpireChange(expire) {\n    this.updateProperty(expire, 'expire');\n    if (Number(this.inputExpire?.nativeElement.selectionStart) === 5 // MM/YY\n    ) {\n      this.focusCVC();\n    }\n  }\n  onCVCChange(cvc) {\n    this.updateProperty(cvc, 'cvc');\n  }\n  transform({\n    offsetWidth\n  }) {\n    return this.cardCollapsed ? `translate3d(${offsetWidth}px, 0, 0)` : '';\n  }\n  onMouseDown(event) {\n    if (tuiIsElement(event.target) && tuiIsInput(event.target)) {\n      return;\n    }\n    event.preventDefault();\n    this.focusInput();\n  }\n  toggle() {\n    this.open.set(!this.open());\n  }\n  isFocusable(card) {\n    return this.cardValidator(card) || this.cardPrefilled;\n  }\n  getPaymentSystem(value) {\n    return this.options.paymentSystemHandler(value);\n  }\n  updateBin(oldBin) {\n    const {\n      bin\n    } = this;\n    if (bin !== oldBin && !this.cardPrefilled) {\n      this.binChange.emit(bin);\n    }\n  }\n  updateProperty(value, propName) {\n    const {\n      card = '',\n      expire = '',\n      cvc = ''\n    } = this.value() || {};\n    const newValue = {\n      card,\n      expire,\n      cvc\n    };\n    newValue[propName] = value;\n    this.onChange(newValue.expire || newValue.cvc || newValue.card ? newValue : null);\n  }\n  focusInput() {\n    const element = this.cardFocusable && this.inputCard?.nativeElement || this.expireFocusable && this.inputExpire?.nativeElement || this.inputCVC?.nativeElement;\n    element?.focus();\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputCardGroup_BaseFactory;\n      return function TuiInputCardGroup_Factory(t) {\n        return (ɵTuiInputCardGroup_BaseFactory || (ɵTuiInputCardGroup_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputCardGroup)))(t || TuiInputCardGroup);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputCardGroup,\n      selectors: [[\"tui-input-card-group\"]],\n      viewQuery: function TuiInputCardGroup_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputCard = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputExpire = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputCVC = _t.first);\n        }\n      },\n      hostAttrs: [\"data-size\", \"l\"],\n      hostBindings: function TuiInputCardGroup_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function TuiInputCardGroup_mousedown_HostBindingHandler($event) {\n            return ctx.onMouseDown($event);\n          })(\"scroll.zoneless\", function TuiInputCardGroup_scroll_zoneless_HostBindingHandler($event) {\n            return $event.target.scrollLeft = 0;\n          });\n        }\n      },\n      inputs: {\n        exampleText: \"exampleText\",\n        placeholder: \"placeholder\",\n        inputs: \"inputs\",\n        cardValidator: \"cardValidator\",\n        icon: \"icon\",\n        id: \"id\",\n        autocomplete: \"autocomplete\",\n        codeLength: \"codeLength\"\n      },\n      outputs: {\n        binChange: \"binChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiAsDataListHost(TuiInputCardGroup), tuiAsControl(TuiInputCardGroup), tuiDropdownOptionsProvider({\n        limitWidth: 'fixed'\n      }), TuiHoveredService]), i0.ɵɵHostDirectivesFeature([i1.TuiAppearance, i2.TuiDropdownDirective, i3.TuiWithTextfieldDropdown, i2.TuiWithDropdownOpen]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 19,\n      vars: 46,\n      consts: [[\"inputExpire\", \"\"], [\"inputCVC\", \"\"], [\"inputCard\", \"\"], [\"ghost\", \"\"], [1, \"t-wrapper\"], [3, \"click.zoneless.prevent\", 4, \"tuiLet\"], [1, \"t-wrapper\", \"t-wrapper_expire\"], [3, \"click.zoneless.prevent\"], [\"automation-id\", \"tui-input-card-group__expire\", \"inputmode\", \"numeric\", \"maxlength\", \"5\", \"translate\", \"no\", 1, \"t-input\", 3, \"focus\", \"ngModelChange\", \"autocomplete\", \"disabled\", \"maskito\", \"ngModel\", \"ngModelOptions\", \"placeholder\", \"readOnly\", \"tabIndex\"], [1, \"t-label\"], [1, \"t-wrapper\", \"t-wrapper_cvc\"], [\"automation-id\", \"tui-input-card-group__cvc\", \"inputmode\", \"numeric\", \"translate\", \"no\", \"type\", \"text\", 1, \"t-input\", 3, \"focus\", \"ngModelChange\", \"autocomplete\", \"disabled\", \"maskito\", \"ngModel\", \"ngModelOptions\", \"placeholder\", \"readOnly\", \"tabIndex\"], [1, \"t-icons\"], [\"class\", \"t-icon-outlet\", 4, \"ngIf\"], [\"automation-id\", \"tui-input-card-group__cleaner\", \"tuiAppearance\", \"icon\", \"class\", \"t-icon\", 3, \"icon\", \"click\", 4, \"ngIf\"], [\"automation-id\", \"tui-input-card-group__dropdown\", \"tuiAppearance\", \"icon\", \"tuiChevron\", \"\", 3, \"click\", 4, \"ngIf\"], [\"automation-id\", \"tui-input-card-group__card\", \"inputmode\", \"numeric\", \"translate\", \"no\", \"type\", \"text\", 1, \"t-input\", \"t-input_card\", 3, \"focus\", \"ngModelChange\", \"autocomplete\", \"disabled\", \"maskito\", \"ngModel\", \"ngModelOptions\", \"placeholder\", \"readOnly\", \"tabIndex\"], [\"aria-hidden\", \"true\", \"translate\", \"no\", 1, \"t-collapsed\", 3, \"waResizeObserver\"], [1, \"t-ghost\", 3, \"textContent\"], [1, \"t-collapsed-wrapper\"], [1, \"t-value\"], [1, \"t-icon-outlet\"], [\"alt\", \"\", \"automation-id\", \"tui-input-card-group__icon\", \"class\", \"t-card\", 3, \"src\", 4, \"polymorpheusOutlet\"], [\"alt\", \"\", \"automation-id\", \"tui-input-card-group__icon\", 1, \"t-card\", 3, \"src\"], [\"automation-id\", \"tui-input-card-group__cleaner\", \"tuiAppearance\", \"icon\", 1, \"t-icon\", 3, \"click\", \"icon\"], [\"automation-id\", \"tui-input-card-group__dropdown\", \"tuiAppearance\", \"icon\", \"tuiChevron\", \"\", 3, \"click\"]],\n      template: function TuiInputCardGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 4);\n          i0.ɵɵtemplate(1, TuiInputCardGroup_label_1_Template, 12, 28, \"label\", 5);\n          i0.ɵɵpipe(2, \"tuiFormatCard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 6)(4, \"label\", 7);\n          i0.ɵɵlistener(\"click.zoneless.prevent\", function TuiInputCardGroup_Template_label_click_zoneless_prevent_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(0);\n          });\n          i0.ɵɵelementStart(5, \"input\", 8, 0);\n          i0.ɵɵlistener(\"focus\", function TuiInputCardGroup_Template_input_focus_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(0);\n          })(\"ngModelChange\", function TuiInputCardGroup_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onExpireChange($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 9);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 10)(10, \"label\", 7);\n          i0.ɵɵlistener(\"click.zoneless.prevent\", function TuiInputCardGroup_Template_label_click_zoneless_prevent_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(0);\n          });\n          i0.ɵɵelementStart(11, \"input\", 11, 1);\n          i0.ɵɵlistener(\"focus\", function TuiInputCardGroup_Template_input_focus_11_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(0);\n          })(\"ngModelChange\", function TuiInputCardGroup_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onCVCChange($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 9);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 12);\n          i0.ɵɵtemplate(16, TuiInputCardGroup_div_16_Template, 2, 1, \"div\", 13)(17, TuiInputCardGroup_tui_icon_17_Template, 1, 1, \"tui-icon\", 14)(18, TuiInputCardGroup_tui_icon_18_Template, 1, 0, \"tui-icon\", 15);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_17_0;\n          let tmp_31_0;\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind2(2, 41, (tmp_2_0 = ctx.value()) == null ? null : tmp_2_0.card, ctx.cardPrefilled));\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"t-wrapper_active\", ctx.cardCollapsed);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"t-input_inert\", !ctx.expireFocusable)(\"t-input_prefilled\", !ctx.inputs.expire);\n          i0.ɵɵproperty(\"autocomplete\", ctx.autocomplete ? \"cc-exp\" : \"off\")(\"disabled\", ctx.disabled())(\"maskito\", ctx.maskExpire)(\"ngModel\", ctx.expire)(\"ngModelOptions\", i0.ɵɵpureFunction0(44, _c3))(\"placeholder\", ctx.inputs.expire ? \"00/00\" : \"\\u2022\\u2022/\\u2022\\u2022\")(\"readOnly\", ctx.readOnly() || !ctx.inputs.expire)(\"tabIndex\", ctx.expireFocusable ? 0 : -1);\n          i0.ɵɵattribute(\"id\", ctx.id + \"_expire\")(\"name\", ctx.autocomplete ? \"ccexpiryyear\" : null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"t-label_raised\", ctx.labelRaised());\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", (tmp_17_0 = ctx.texts()) == null ? null : tmp_17_0.expiryText, \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"t-wrapper_active\", ctx.cardCollapsed);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"t-input_cvc_hidden\", ctx.cvcHidden)(\"t-input_prefilled\", ctx.cvcPrefilled);\n          i0.ɵɵproperty(\"autocomplete\", ctx.autocomplete ? \"cc-csc\" : \"off\")(\"disabled\", ctx.disabled())(\"maskito\", ctx.maskCVC)(\"ngModel\", ctx.cvc)(\"ngModelOptions\", i0.ɵɵpureFunction0(45, _c3))(\"placeholder\", ctx.cvcPrefilled ? \"\\u2022\\u2022\\u2022\" : ctx.exampleTextCVC)(\"readOnly\", ctx.readOnly() || ctx.cvcPrefilled)(\"tabIndex\", ctx.cvcFocusable ? 0 : -1);\n          i0.ɵɵattribute(\"id\", ctx.id + \"_cvc\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"t-label_raised\", ctx.labelRaised());\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", (tmp_31_0 = ctx.texts()) == null ? null : tmp_31_0.cvcText, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.content);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.hasCleaner());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.dropdown.content);\n        }\n      },\n      dependencies: [FormsModule, i4.DefaultValueAccessor, i4.NgControlStatus, i4.MaxLengthValidator, i4.NgModel, MaskitoDirective, NgIf, PolymorpheusOutlet, TuiAppearance, TuiChevron, TuiFormatCardPipe, TuiIcon, TuiIconPipe, TuiLet, TuiMapperPipe, WaResizeObserver],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;block-size:var(--tui-height-l);inline-size:29.5rem;border-radius:var(--tui-radius-l);overflow:hidden}[_nghost-%COMP%]   tui-root._mobile[_nghost-%COMP%], tui-root._mobile   [_nghost-%COMP%]{inline-size:18rem}[tuiAppearance][data-appearance][_nghost-%COMP%]:has(:-webkit-autofill){background:var(--tui-service-autofill-background)!important}.t-outline[_ngcontent-%COMP%]{block-size:100%;inline-size:100%}.t-wrapper[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;inline-size:100%;block-size:100%}.t-wrapper_cvc[_ngcontent-%COMP%]{margin-left:7.1875rem;transform:translate3d(100%,0,0)}tui-root._mobile[_nghost-%COMP%]   .t-wrapper_cvc[_ngcontent-%COMP%], tui-root._mobile   [_nghost-%COMP%]   .t-wrapper_cvc[_ngcontent-%COMP%]{margin-left:4.0625rem}.t-wrapper_expire[_ngcontent-%COMP%]{transform:translate3d(100%,0,0)}.t-wrapper_active[_ngcontent-%COMP%]{transform:translate3d(6.5625rem,0,0)}tui-root._mobile[_nghost-%COMP%]   .t-wrapper_active[_ngcontent-%COMP%], tui-root._mobile   [_nghost-%COMP%]   .t-wrapper_active[_ngcontent-%COMP%]{transform:translate3d(4.125rem,0,0)}.t-card[_ngcontent-%COMP%]{inline-size:2rem;block-size:2rem}.t-collapsed[_ngcontent-%COMP%]{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;padding:1.25rem var(--tui-padding-l) 0;box-sizing:border-box;font:var(--tui-font-text-m);line-height:2.25rem;color:var(--tui-text-primary);white-space:nowrap;pointer-events:none}.t-collapsed_enable-mask[_ngcontent-%COMP%]:before{content:attr(data-before)}.t-collapsed_enable-mask[_ngcontent-%COMP%]   .t-collapsed-wrapper[_ngcontent-%COMP%]{left:1.375rem}.t-collapsed-wrapper[_ngcontent-%COMP%]{position:absolute;top:0;display:block;inline-size:100%;block-size:100%;overflow:hidden}.t-value[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;bottom:0;right:100%;display:block;transform:translate3d(100%,0,0)}.t-input[_ngcontent-%COMP%]{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border:0;margin:0;padding:1.25rem var(--tui-padding-l) 0;outline:none;background:transparent;box-sizing:border-box;font:var(--tui-font-text-m);color:var(--tui-text-primary)}.t-input[_ngcontent-%COMP%]::placeholder{color:var(--tui-text-tertiary)}.t-input_prefilled[_ngcontent-%COMP%]::placeholder{color:var(--tui-text-primary)}.t-input[chrome-autofilled][_ngcontent-%COMP%], .t-input[_ngcontent-%COMP%]:-webkit-autofill{-webkit-text-fill-color:var(--tui-text-primary)!important;caret-color:var(--tui-text-primary)!important;-webkit-transition:background-color 600000s 0s;transition:background-color 600000s 0s}.t-input.t-input.t-input_card[_ngcontent-%COMP%]:not(:-webkit-autofill):not(:focus:placeholder-shown), .t-input.t-input.t-input_card.t-input_filled[_ngcontent-%COMP%]{caret-color:var(--tui-text-primary);color:transparent!important;-webkit-text-fill-color:transparent!important}.t-input.t-input.t-input_card[_ngcontent-%COMP%]::-webkit-credit-card-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input_inert[_ngcontent-%COMP%]{pointer-events:none}.t-input_cvc_hidden[_ngcontent-%COMP%]{-webkit-text-security:disc}.t-icons[_ngcontent-%COMP%]{position:absolute;right:.75rem;display:flex;align-items:center;block-size:100%}.t-icon-outlet[_ngcontent-%COMP%]{display:flex;margin-right:.25rem}.t-icon[_ngcontent-%COMP%]{cursor:pointer;border-width:.25rem}.t-label[_ngcontent-%COMP%]{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;margin:1.125rem 1rem;font:var(--tui-font-text-m);line-height:1.25rem;color:var(--tui-text-secondary)}input[_ngcontent-%COMP%]:-webkit-autofill ~ .t-label[_ngcontent-%COMP%], .t-label_raised[_ngcontent-%COMP%]{font-size:.8156rem;transform:translateY(-.7em)}[data-mode~=\\\"invalid\\\"][_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{color:var(--tui-text-negative)}[data-focus=\\\"true\\\"][_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{color:var(--tui-text-primary)}.t-ghost[_ngcontent-%COMP%]{visibility:hidden}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiInputCardGroup.prototype, \"isFocusable\", null);\n__decorate([tuiPure], TuiInputCardGroup.prototype, \"getPaymentSystem\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputCardGroup, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-input-card-group',\n      imports: [FormsModule, MaskitoDirective, NgIf, PolymorpheusOutlet, PolymorpheusTemplate, TuiActiveZone, TuiAppearance, TuiChevron, TuiFormatCardPipe, TuiIcon, TuiIconPipe, TuiLet, TuiMapperPipe, WaResizeObserver],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataListHost(TuiInputCardGroup), tuiAsControl(TuiInputCardGroup), tuiDropdownOptionsProvider({\n        limitWidth: 'fixed'\n      }), TuiHoveredService],\n      hostDirectives: [TuiAppearance, TuiDropdownDirective, TuiWithTextfieldDropdown, TuiWithDropdownOpen],\n      host: {\n        'data-size': 'l',\n        '(mousedown)': 'onMouseDown($event)',\n        '(scroll.zoneless)': '$event.target.scrollLeft = 0'\n      },\n      template: \"<div class=\\\"t-wrapper\\\">\\n    <label\\n        *tuiLet=\\\"value()?.card | tuiFormatCard: cardPrefilled as formattedCard\\\"\\n        (click.zoneless.prevent)=\\\"(0)\\\"\\n    >\\n        <input\\n            #inputCard\\n            automation-id=\\\"tui-input-card-group__card\\\"\\n            inputmode=\\\"numeric\\\"\\n            translate=\\\"no\\\"\\n            type=\\\"text\\\"\\n            class=\\\"t-input t-input_card\\\"\\n            [attr.aria-invalid]=\\\"!cardPrefilled && !(this.card | tuiMapper: cardValidator)\\\"\\n            [attr.id]=\\\"id + '_card'\\\"\\n            [autocomplete]=\\\"autocomplete ? 'cc-number' : 'off'\\\"\\n            [class.t-input_filled]=\\\"card.length\\\"\\n            [class.t-input_inert]=\\\"cardPrefilled\\\"\\n            [disabled]=\\\"disabled()\\\"\\n            [maskito]=\\\"maskCard\\\"\\n            [ngModel]=\\\"formattedCard\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\"\\n            [placeholder]=\\\"cardPrefilled ? '' : placeholder || exampleText\\\"\\n            [readOnly]=\\\"readOnly()\\\"\\n            [tabIndex]=\\\"cardFocusable ? 0 : -1\\\"\\n            (focus)=\\\"(0)\\\"\\n            (ngModelChange)=\\\"onCardChange($event)\\\"\\n        />\\n        <span\\n            aria-hidden=\\\"true\\\"\\n            translate=\\\"no\\\"\\n            class=\\\"t-collapsed\\\"\\n            [attr.data-before]=\\\"masked\\\"\\n            [class.t-collapsed_enable-mask]=\\\"cardCollapsed\\\"\\n            (waResizeObserver)=\\\"onResize()\\\"\\n        >\\n            <span\\n                #ghost\\n                class=\\\"t-ghost\\\"\\n                [textContent]=\\\"formattedCard.slice(-tailLength)\\\"\\n            ></span>\\n\\n            <span class=\\\"t-collapsed-wrapper\\\">\\n                <span\\n                    class=\\\"t-value\\\"\\n                    [style.transform]=\\\"transform(ghost)\\\"\\n                >\\n                    {{ formattedCard }}\\n                </span>\\n            </span>\\n        </span>\\n        <div\\n            class=\\\"t-label\\\"\\n            [class.t-label_raised]=\\\"labelRaised()\\\"\\n        >\\n            {{ texts()?.cardNumberText }}\\n        </div>\\n    </label>\\n</div>\\n<div\\n    class=\\\"t-wrapper t-wrapper_expire\\\"\\n    [class.t-wrapper_active]=\\\"cardCollapsed\\\"\\n>\\n    <label (click.zoneless.prevent)=\\\"(0)\\\">\\n        <input\\n            #inputExpire\\n            automation-id=\\\"tui-input-card-group__expire\\\"\\n            inputmode=\\\"numeric\\\"\\n            maxlength=\\\"5\\\"\\n            translate=\\\"no\\\"\\n            class=\\\"t-input\\\"\\n            [attr.id]=\\\"id + '_expire'\\\"\\n            [attr.name]=\\\"autocomplete ? 'ccexpiryyear' : null\\\"\\n            [autocomplete]=\\\"autocomplete ? 'cc-exp' : 'off'\\\"\\n            [class.t-input_inert]=\\\"!expireFocusable\\\"\\n            [class.t-input_prefilled]=\\\"!inputs.expire\\\"\\n            [disabled]=\\\"disabled()\\\"\\n            [maskito]=\\\"maskExpire\\\"\\n            [ngModel]=\\\"expire\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\"\\n            [placeholder]=\\\"inputs.expire ? '00/00' : '\\u2022\\u2022/\\u2022\\u2022'\\\"\\n            [readOnly]=\\\"readOnly() || !inputs.expire\\\"\\n            [tabIndex]=\\\"expireFocusable ? 0 : -1\\\"\\n            (focus)=\\\"(0)\\\"\\n            (ngModelChange)=\\\"onExpireChange($event)\\\"\\n        />\\n        <div\\n            class=\\\"t-label\\\"\\n            [class.t-label_raised]=\\\"labelRaised()\\\"\\n        >\\n            {{ texts()?.expiryText }}\\n        </div>\\n    </label>\\n</div>\\n<div\\n    class=\\\"t-wrapper t-wrapper_cvc\\\"\\n    [class.t-wrapper_active]=\\\"cardCollapsed\\\"\\n>\\n    <label (click.zoneless.prevent)=\\\"(0)\\\">\\n        <input\\n            #inputCVC\\n            automation-id=\\\"tui-input-card-group__cvc\\\"\\n            inputmode=\\\"numeric\\\"\\n            translate=\\\"no\\\"\\n            type=\\\"text\\\"\\n            class=\\\"t-input\\\"\\n            [attr.id]=\\\"id + '_cvc'\\\"\\n            [autocomplete]=\\\"autocomplete ? 'cc-csc' : 'off'\\\"\\n            [class.t-input_cvc_hidden]=\\\"cvcHidden\\\"\\n            [class.t-input_prefilled]=\\\"cvcPrefilled\\\"\\n            [disabled]=\\\"disabled()\\\"\\n            [maskito]=\\\"maskCVC\\\"\\n            [ngModel]=\\\"cvc\\\"\\n            [ngModelOptions]=\\\"{standalone: true}\\\"\\n            [placeholder]=\\\"cvcPrefilled ? '\\u2022\\u2022\\u2022' : exampleTextCVC\\\"\\n            [readOnly]=\\\"readOnly() || cvcPrefilled\\\"\\n            [tabIndex]=\\\"cvcFocusable ? 0 : -1\\\"\\n            (focus)=\\\"(0)\\\"\\n            (ngModelChange)=\\\"onCVCChange($event)\\\"\\n        />\\n        <div\\n            class=\\\"t-label\\\"\\n            [class.t-label_raised]=\\\"labelRaised()\\\"\\n        >\\n            {{ texts()?.cvcText }}\\n        </div>\\n    </label>\\n</div>\\n<div class=\\\"t-icons\\\">\\n    <div\\n        *ngIf=\\\"content\\\"\\n        class=\\\"t-icon-outlet\\\"\\n    >\\n        <img\\n            *polymorpheusOutlet=\\\"content as src\\\"\\n            alt=\\\"\\\"\\n            automation-id=\\\"tui-input-card-group__icon\\\"\\n            class=\\\"t-card\\\"\\n            [src]=\\\"src | tuiIcon\\\"\\n        />\\n    </div>\\n    <tui-icon\\n        *ngIf=\\\"hasCleaner()\\\"\\n        automation-id=\\\"tui-input-card-group__cleaner\\\"\\n        tuiAppearance=\\\"icon\\\"\\n        class=\\\"t-icon\\\"\\n        [icon]=\\\"icons.close\\\"\\n        (click)=\\\"clear()\\\"\\n    />\\n    <tui-icon\\n        *ngIf=\\\"dropdown.content\\\"\\n        automation-id=\\\"tui-input-card-group__dropdown\\\"\\n        tuiAppearance=\\\"icon\\\"\\n        tuiChevron\\n        (click)=\\\"toggle()\\\"\\n    />\\n</div>\\n\",\n      styles: [\":host{position:relative;display:block;block-size:var(--tui-height-l);inline-size:29.5rem;border-radius:var(--tui-radius-l);overflow:hidden}:host :host-context(tui-root._mobile){inline-size:18rem}:host[tuiAppearance][data-appearance]:has(:-webkit-autofill){background:var(--tui-service-autofill-background)!important}.t-outline{block-size:100%;inline-size:100%}.t-wrapper{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;inline-size:100%;block-size:100%}.t-wrapper_cvc{margin-left:7.1875rem;transform:translate3d(100%,0,0)}:host-context(tui-root._mobile) .t-wrapper_cvc{margin-left:4.0625rem}.t-wrapper_expire{transform:translate3d(100%,0,0)}.t-wrapper_active{transform:translate3d(6.5625rem,0,0)}:host-context(tui-root._mobile) .t-wrapper_active{transform:translate3d(4.125rem,0,0)}.t-card{inline-size:2rem;block-size:2rem}.t-collapsed{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;padding:1.25rem var(--tui-padding-l) 0;box-sizing:border-box;font:var(--tui-font-text-m);line-height:2.25rem;color:var(--tui-text-primary);white-space:nowrap;pointer-events:none}.t-collapsed_enable-mask:before{content:attr(data-before)}.t-collapsed_enable-mask .t-collapsed-wrapper{left:1.375rem}.t-collapsed-wrapper{position:absolute;top:0;display:block;inline-size:100%;block-size:100%;overflow:hidden}.t-value{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;bottom:0;right:100%;display:block;transform:translate3d(100%,0,0)}.t-input{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border:0;margin:0;padding:1.25rem var(--tui-padding-l) 0;outline:none;background:transparent;box-sizing:border-box;font:var(--tui-font-text-m);color:var(--tui-text-primary)}.t-input::placeholder{color:var(--tui-text-tertiary)}.t-input_prefilled::placeholder{color:var(--tui-text-primary)}.t-input[chrome-autofilled],.t-input:-webkit-autofill{-webkit-text-fill-color:var(--tui-text-primary)!important;caret-color:var(--tui-text-primary)!important;-webkit-transition:background-color 600000s 0s;transition:background-color 600000s 0s}.t-input.t-input.t-input_card:not(:-webkit-autofill):not(:focus:placeholder-shown),.t-input.t-input.t-input_card.t-input_filled{caret-color:var(--tui-text-primary);color:transparent!important;-webkit-text-fill-color:transparent!important}.t-input.t-input.t-input_card::-webkit-credit-card-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input_inert{pointer-events:none}.t-input_cvc_hidden{-webkit-text-security:disc}.t-icons{position:absolute;right:.75rem;display:flex;align-items:center;block-size:100%}.t-icon-outlet{display:flex;margin-right:.25rem}.t-icon{cursor:pointer;border-width:.25rem}.t-label{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;margin:1.125rem 1rem;font:var(--tui-font-text-m);line-height:1.25rem;color:var(--tui-text-secondary)}input:-webkit-autofill~.t-label,.t-label_raised{font-size:.8156rem;transform:translateY(-.7em)}:host([data-mode~=\\\"invalid\\\"]) .t-label{color:var(--tui-text-negative)}:host([data-focus=\\\"true\\\"]) .t-label{color:var(--tui-text-primary)}.t-ghost{visibility:hidden}\\n\"]\n    }]\n  }], null, {\n    inputCard: [{\n      type: ViewChild,\n      args: ['inputCard']\n    }],\n    inputExpire: [{\n      type: ViewChild,\n      args: ['inputExpire']\n    }],\n    inputCVC: [{\n      type: ViewChild,\n      args: ['inputCVC']\n    }],\n    exampleText: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    inputs: [{\n      type: Input\n    }],\n    cardValidator: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    binChange: [{\n      type: Output\n    }],\n    codeLength: [{\n      type: Input\n    }],\n    isFocusable: [],\n    getPaymentSystem: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS, TUI_INPUT_CARD_GROUP_OPTIONS, TUI_INPUT_CARD_GROUP_TEXTS, TuiInputCardGroup, tuiInputCardGroupOptionsProvider };\n", "import * as i0 from '@angular/core';\nimport { inject, Directive, Input } from '@angular/core';\nimport * as i1 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport { TUI_INPUT_CARD_OPTIONS } from '@taiga-ui/addon-commerce/components/input-card';\nimport { TUI_MASK_CVC } from '@taiga-ui/addon-commerce/constants';\nimport * as i2 from '@taiga-ui/core/components/textfield';\nimport { TuiWithTextfield } from '@taiga-ui/core/components/textfield';\nimport { tuiMaskito } from '@taiga-ui/kit/utils';\nclass TuiInputCVC {\n  constructor() {\n    this.mask = tuiMaskito(TUI_MASK_CVC(3));\n    this.autocomplete = inject(TUI_INPUT_CARD_OPTIONS).autocomplete;\n    this.hidden = true;\n    this.length = 3;\n  }\n  // TODO: refactor to signal inputs after Angular update\n  ngOnChanges() {\n    this.mask.set(TUI_MASK_CVC(this.length));\n  }\n  static {\n    this.ɵfac = function TuiInputCVC_Factory(t) {\n      return new (t || TuiInputCVC)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputCVC,\n      selectors: [[\"input\", \"tuiInputCVC\", \"\"]],\n      hostAttrs: [\"inputmode\", \"numeric\"],\n      hostVars: 4,\n      hostBindings: function TuiInputCVC_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"copy.prevent\", function TuiInputCVC_copy_prevent_HostBindingHandler() {\n            return 0;\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete ? \"cc-csc\" : \"off\")(\"placeholder\", \"0\".repeat(ctx.length));\n          i0.ɵɵstyleProp(\"-webkit-text-security\", ctx.hidden ? \"disc\" : null);\n        }\n      },\n      inputs: {\n        autocomplete: \"autocomplete\",\n        hidden: \"hidden\",\n        length: \"length\"\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1.MaskitoDirective, i2.TuiWithTextfield]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputCVC, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'input[tuiInputCVC]',\n      hostDirectives: [MaskitoDirective, TuiWithTextfield],\n      host: {\n        inputmode: 'numeric',\n        '[autocomplete]': 'autocomplete ? \"cc-csc\" : \"off\"',\n        '[placeholder]': '\"0\".repeat(length)',\n        '[style.-webkit-text-security]': 'hidden ? \"disc\" : null',\n        '(copy.prevent)': '(0)'\n      }\n    }]\n  }], null, {\n    autocomplete: [{\n      type: Input\n    }],\n    hidden: [{\n      type: Input\n    }],\n    length: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputCVC };\n", "import * as i0 from '@angular/core';\nimport { inject, Directive, Input } from '@angular/core';\nimport * as i1 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport { TUI_INPUT_CARD_OPTIONS } from '@taiga-ui/addon-commerce/components/input-card';\nimport { TUI_MASK_EXPIRE } from '@taiga-ui/addon-commerce/constants';\nimport * as i2 from '@taiga-ui/core/components/textfield';\nimport { TuiWithTextfield } from '@taiga-ui/core/components/textfield';\nimport { tuiMaskito } from '@taiga-ui/kit/utils';\nclass TuiInputExpire {\n  constructor() {\n    this.mask = tuiMaskito(TUI_MASK_EXPIRE);\n    this.autocomplete = inject(TUI_INPUT_CARD_OPTIONS).autocomplete;\n  }\n  static {\n    this.ɵfac = function TuiInputExpire_Factory(t) {\n      return new (t || TuiInputExpire)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputExpire,\n      selectors: [[\"input\", \"tuiInputExpire\", \"\"]],\n      hostAttrs: [\"inputmode\", \"numeric\", \"placeholder\", \"00/00\", \"translate\", \"no\", \"maxlength\", \"5\"],\n      hostVars: 2,\n      hostBindings: function TuiInputExpire_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete ? \"cc-exp\" : \"off\");\n          i0.ɵɵattribute(\"name\", ctx.autocomplete ? \"ccexpiryyear\" : null);\n        }\n      },\n      inputs: {\n        autocomplete: \"autocomplete\"\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1.MaskitoDirective, i2.TuiWithTextfield])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputExpire, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'input[tuiInputExpire]',\n      hostDirectives: [MaskitoDirective, TuiWithTextfield],\n      host: {\n        inputmode: 'numeric',\n        placeholder: '00/00',\n        translate: 'no',\n        maxlength: '5',\n        '[attr.name]': 'autocomplete ? \"ccexpiryyear\" : null',\n        '[autocomplete]': 'autocomplete ? \"cc-exp\" : \"off\"'\n      }\n    }]\n  }], null, {\n    autocomplete: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputExpire };\n", "import { NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TuiIcon, TuiIconPipe } from '@taiga-ui/core/components/icon';\nimport { TUI_PAYMENT_SYSTEM_ICONS } from '@taiga-ui/addon-commerce/tokens';\nimport { tuiCreateTokenFromFactory } from '@taiga-ui/cdk/utils/miscellaneous';\nconst _c0 = [[[\"img\"]], \"*\"];\nconst _c1 = [\"img\", \"*\"];\nfunction TuiThumbnailCard_tui_icon_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-icon\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r0.iconStart);\n  }\n}\nfunction TuiThumbnailCard_tui_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-icon\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r0.iconEnd);\n  }\n}\nfunction TuiThumbnailCard_ng_container_6_tui_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-icon\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r0.options.icons[ctx_r0.paymentSystem]);\n  }\n}\nfunction TuiThumbnailCard_ng_container_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 10);\n    i0.ɵɵpipe(1, \"tuiIcon\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"alt\", ctx_r0.paymentSystem)(\"src\", i0.ɵɵpipeBind1(1, 2, ctx_r0.options.icons[ctx_r0.paymentSystem]), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction TuiThumbnailCard_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiThumbnailCard_ng_container_6_tui_icon_1_Template, 1, 1, \"tui-icon\", 8)(2, TuiThumbnailCard_ng_container_6_ng_template_2_Template, 2, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const colored_r2 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.monoHandler(ctx_r0.paymentSystem))(\"ngIfElse\", colored_r2);\n  }\n}\nconst TUI_THUMBNAIL_CARD_OPTIONS = tuiCreateTokenFromFactory(() => ({\n  icons: inject(TUI_PAYMENT_SYSTEM_ICONS),\n  size: 'm',\n  monoHandler: ps => ps === 'mir' || ps === 'visa' || ps === 'electron'\n}));\nclass TuiThumbnailCard {\n  constructor() {\n    this.options = inject(TUI_THUMBNAIL_CARD_OPTIONS);\n    this.size = this.options.size;\n    this.paymentSystem = null;\n    this.iconStart = '';\n    this.iconEnd = '';\n    this.monoHandler = this.options.monoHandler;\n  }\n  static {\n    this.ɵfac = function TuiThumbnailCard_Factory(t) {\n      return new (t || TuiThumbnailCard)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiThumbnailCard,\n      selectors: [[\"tui-thumbnail-card\"]],\n      hostVars: 1,\n      hostBindings: function TuiThumbnailCard_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      inputs: {\n        size: \"size\",\n        paymentSystem: \"paymentSystem\",\n        iconStart: \"iconStart\",\n        iconEnd: \"iconEnd\",\n        monoHandler: \"monoHandler\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 7,\n      vars: 3,\n      consts: [[\"colored\", \"\"], [\"class\", \"t-icon t-left\", 3, \"icon\", 4, \"ngIf\"], [1, \"t-left\", \"t-icon\"], [\"class\", \"t-right t-icon\", 3, \"icon\", 4, \"ngIf\"], [1, \"t-content\"], [4, \"ngIf\"], [1, \"t-icon\", \"t-left\", 3, \"icon\"], [1, \"t-right\", \"t-icon\", 3, \"icon\"], [\"class\", \"t-logo\", 3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [1, \"t-logo\", 3, \"icon\"], [1, \"t-logo\", 3, \"alt\", \"src\"]],\n      template: function TuiThumbnailCard_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵtemplate(0, TuiThumbnailCard_tui_icon_0_Template, 1, 1, \"tui-icon\", 1);\n          i0.ɵɵelementStart(1, \"div\", 2);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, TuiThumbnailCard_tui_icon_3_Template, 1, 1, \"tui-icon\", 3);\n          i0.ɵɵelementStart(4, \"div\", 4);\n          i0.ɵɵprojection(5, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, TuiThumbnailCard_ng_container_6_Template, 4, 2, \"ng-container\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.iconStart);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.iconEnd);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.paymentSystem);\n        }\n      },\n      dependencies: [NgIf, TuiIcon, TuiIconPipe],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:inline-block;flex-shrink:0;background:#000;color:#fff;transform-style:preserve-3d;overflow:hidden;box-shadow:inset 0 0 0 1px var(--tui-background-neutral-1);--t-logo-height: .8125rem}[_nghost-%COMP%]:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";border-radius:inherit}[_nghost-%COMP%]:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";-webkit-backface-visibility:hidden;backface-visibility:hidden;transform:rotateY(180deg) translateZ(1px);color:#b0b0b0;border-radius:inherit;background:linear-gradient(to bottom,currentColor 0 20%,#959595 20% 40%,currentColor 40%)}[data-size=xs][_nghost-%COMP%], [data-size=s][_nghost-%COMP%]{font-size:0;border-radius:.25rem}[data-size=xs][_nghost-%COMP%]{inline-size:2rem;block-size:1.375rem}[data-size=s][_nghost-%COMP%]{inline-size:2.5rem;block-size:1.625rem}[data-size=m][_nghost-%COMP%]{inline-size:3rem;block-size:2rem;border-radius:.3125rem;font:normal .5625rem / var(--t-logo-height) var(--tui-font-text)}[data-size=l][_nghost-%COMP%]{inline-size:3.375rem;block-size:2.25rem;border-radius:.375rem;font:normal .6875rem / var(--t-logo-height) var(--tui-font-text)}.t-left[_ngcontent-%COMP%]{position:absolute;top:0;left:0;display:flex;transform-origin:top left}[data-size=xs][_nghost-%COMP%]   .t-left[_ngcontent-%COMP%], [data-size=s][_nghost-%COMP%]   .t-left[_ngcontent-%COMP%]{transform:translate(.125rem,.125rem) scale(.625)}[data-size=m][_nghost-%COMP%]   .t-left[_ngcontent-%COMP%]{transform:translate(.1875rem,.1875rem) scale(.875)}[data-size=l][_nghost-%COMP%]   .t-left[_ngcontent-%COMP%]{transform:translate(.1875rem,.1875rem)}.t-right[_ngcontent-%COMP%]{position:absolute;top:.1875rem;right:.1875rem}[data-size=xs][_nghost-%COMP%]   .t-right[_ngcontent-%COMP%], [data-size=s][_nghost-%COMP%]   .t-right[_ngcontent-%COMP%]{display:none}[data-size=m][_nghost-%COMP%]   .t-right[_ngcontent-%COMP%]{inline-size:.875rem;block-size:.875rem}[data-size=m][_nghost-%COMP%]   .t-right[_ngcontent-%COMP%]:after{transform:scale(.5)}[data-size=l][_nghost-%COMP%]   .t-right[_ngcontent-%COMP%]{inline-size:1rem;block-size:1rem}[data-size=l][_nghost-%COMP%]   .t-right[_ngcontent-%COMP%]:after{color:#fff;transform:scale(.625)}.t-right[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border-radius:100%;background:currentColor;opacity:.35}.t-logo[_ngcontent-%COMP%]{position:absolute;right:.25rem;bottom:0;block-size:var(--t-logo-height);transform-origin:right}[data-size=xs][_nghost-%COMP%]   .t-logo[_ngcontent-%COMP%]{right:.125rem}[data-size=m][_nghost-%COMP%]   .t-logo[_ngcontent-%COMP%], [data-size=l][_nghost-%COMP%]   .t-logo[_ngcontent-%COMP%]{bottom:.0625rem}.t-logo[_ngcontent-%COMP%]:after{-webkit-mask-position:right;mask-position:right}.t-content[_ngcontent-%COMP%]{position:absolute}[data-size=m][_nghost-%COMP%]   .t-content[_ngcontent-%COMP%]{left:.1875rem;bottom:.0625rem}[data-size=l][_nghost-%COMP%]   .t-content[_ngcontent-%COMP%]{left:.25rem;bottom:.0625rem}.t-icon[_ngcontent-%COMP%]{inline-size:1rem;block-size:1rem}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiThumbnailCard, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-thumbnail-card',\n      imports: [NgIf, TuiIcon, TuiIconPipe],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[attr.data-size]': 'size'\n      },\n      template: \"<!-- TODO: use this icon as a fallback for <ng-content select=\\\"img\\\" /> (Angular 18)  -->\\n<tui-icon\\n    *ngIf=\\\"iconStart\\\"\\n    class=\\\"t-icon t-left\\\"\\n    [icon]=\\\"iconStart\\\"\\n/>\\n\\n<div class=\\\"t-left t-icon\\\">\\n    <ng-content select=\\\"img\\\" />\\n</div>\\n\\n<tui-icon\\n    *ngIf=\\\"iconEnd\\\"\\n    class=\\\"t-right t-icon\\\"\\n    [icon]=\\\"iconEnd\\\"\\n/>\\n\\n<div class=\\\"t-content\\\">\\n    <ng-content />\\n</div>\\n\\n<ng-container *ngIf=\\\"paymentSystem\\\">\\n    <tui-icon\\n        *ngIf=\\\"monoHandler(paymentSystem); else colored\\\"\\n        class=\\\"t-logo\\\"\\n        [icon]=\\\"options.icons[paymentSystem]\\\"\\n    />\\n    <ng-template #colored>\\n        <img\\n            class=\\\"t-logo\\\"\\n            [alt]=\\\"paymentSystem\\\"\\n            [src]=\\\"options.icons[paymentSystem] | tuiIcon\\\"\\n        />\\n    </ng-template>\\n</ng-container>\\n\",\n      styles: [\":host{position:relative;display:inline-block;flex-shrink:0;background:#000;color:#fff;transform-style:preserve-3d;overflow:hidden;box-shadow:inset 0 0 0 1px var(--tui-background-neutral-1);--t-logo-height: .8125rem}:host:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";border-radius:inherit}:host:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";-webkit-backface-visibility:hidden;backface-visibility:hidden;transform:rotateY(180deg) translateZ(1px);color:#b0b0b0;border-radius:inherit;background:linear-gradient(to bottom,currentColor 0 20%,#959595 20% 40%,currentColor 40%)}:host[data-size=xs],:host[data-size=s]{font-size:0;border-radius:.25rem}:host[data-size=xs]{inline-size:2rem;block-size:1.375rem}:host[data-size=s]{inline-size:2.5rem;block-size:1.625rem}:host[data-size=m]{inline-size:3rem;block-size:2rem;border-radius:.3125rem;font:normal .5625rem / var(--t-logo-height) var(--tui-font-text)}:host[data-size=l]{inline-size:3.375rem;block-size:2.25rem;border-radius:.375rem;font:normal .6875rem / var(--t-logo-height) var(--tui-font-text)}.t-left{position:absolute;top:0;left:0;display:flex;transform-origin:top left}:host[data-size=xs] .t-left,:host[data-size=s] .t-left{transform:translate(.125rem,.125rem) scale(.625)}:host[data-size=m] .t-left{transform:translate(.1875rem,.1875rem) scale(.875)}:host[data-size=l] .t-left{transform:translate(.1875rem,.1875rem)}.t-right{position:absolute;top:.1875rem;right:.1875rem}:host[data-size=xs] .t-right,:host[data-size=s] .t-right{display:none}:host[data-size=m] .t-right{inline-size:.875rem;block-size:.875rem}:host[data-size=m] .t-right:after{transform:scale(.5)}:host[data-size=l] .t-right{inline-size:1rem;block-size:1rem}:host[data-size=l] .t-right:after{color:#fff;transform:scale(.625)}.t-right:before{content:\\\"\\\";position:absolute;top:0;left:0;inline-size:100%;block-size:100%;border-radius:100%;background:currentColor;opacity:.35}.t-logo{position:absolute;right:.25rem;bottom:0;block-size:var(--t-logo-height);transform-origin:right}:host[data-size=xs] .t-logo{right:.125rem}:host[data-size=m] .t-logo,:host[data-size=l] .t-logo{bottom:.0625rem}.t-logo:after{-webkit-mask-position:right;mask-position:right}.t-content{position:absolute}:host[data-size=m] .t-content{left:.1875rem;bottom:.0625rem}:host[data-size=l] .t-content{left:.25rem;bottom:.0625rem}.t-icon{inline-size:1rem;block-size:1rem}\\n\"]\n    }]\n  }], null, {\n    size: [{\n      type: Input\n    }],\n    paymentSystem: [{\n      type: Input\n    }],\n    iconStart: [{\n      type: Input\n    }],\n    iconEnd: [{\n      type: Input\n    }],\n    monoHandler: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_THUMBNAIL_CARD_OPTIONS, TuiThumbnailCard };\n", "import { tuiIsExpireValid, tuiIsCardNumberValid } from '@taiga-ui/addon-commerce/utils';\nimport { TuiValidationError } from '@taiga-ui/cdk/classes';\nfunction tuiCardExpireValidator({\n  value\n}) {\n  return value?.expire?.length === 5 && !tuiIsExpireValid(value?.expire) ? {\n    expire: new TuiValidationError('Expire date')\n  } : null;\n}\nfunction tuiCardNumberValidator({\n  value\n}) {\n  return value?.card && !tuiIsCardNumberValid(value.card) ? {\n    card: new TuiValidationError('Invalid card number')\n  } : null;\n}\nfunction tuiCreateLuhnValidator(message) {\n  return ({\n    value\n  }) => tuiIsCardNumberValid(value) ? null : {\n    luhn: new TuiValidationError(message)\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiCardExpireValidator, tuiCardNumberValidator, tuiCreateLuhnValidator };\n"],
  "mappings": "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IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,gBAAgB;AACnB,aAAO;AAAA,IACT,KAAK,YAAY;AAAA,IACjB,KAAK,g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",
  "names": ["TuiCurrency", "TuiCurrencyCode", "value", "_c0", "cvcTexts", "_c0", "_c1"]
}
